import Gaffer
import GafferArnold
import GafferOSL
import GafferScene
import IECore
import imath

Gaffer.Metadata.registerValue( parent, "serialiser:milestoneVersion", 1, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:majorVersion", 3, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:minorVersion", 10, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:patchVersion", 0, persistent=False )

__children = {}

__children["Group3"] = GafferScene.Group( "Group3" )
parent.addChild( __children["Group3"] )
__children["Group3"]["in"].addChild( GafferScene.ScenePlug( "in1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Group3"]["in"].addChild( GafferScene.ScenePlug( "in2", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Group3"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Group4"] = GafferScene.Group( "Group4" )
parent.addChild( __children["Group4"] )
__children["Group4"]["in"].addChild( GafferScene.ScenePlug( "in1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Group4"]["in"].addChild( GafferScene.ScenePlug( "in2", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Group4"]["in"].addChild( GafferScene.ScenePlug( "in3", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Group4"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["CAM_group"] = GafferScene.Group( "CAM_group" )
parent.addChild( __children["CAM_group"] )
__children["CAM_group"]["in"].addChild( GafferScene.ScenePlug( "in1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["CAM_group"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["HDRskydome"] = Gaffer.Box( "HDRskydome" )
parent.addChild( __children["HDRskydome"] )
__children["HDRskydome"].addChild( GafferArnold.ArnoldLight( "SkydomeLight" ) )
__children["HDRskydome"]["SkydomeLight"].loadShader( "skydome_light" )
__children["HDRskydome"]["SkydomeLight"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["HDRskydome"].addChild( GafferScene.ScenePlug( "out", direction = Gaffer.Plug.Direction.Out, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["HDRskydome"].addChild( Gaffer.BoxOut( "BoxOut" ) )
__children["HDRskydome"]["BoxOut"].setup( GafferScene.ScenePlug( "in", ) )
__children["HDRskydome"]["BoxOut"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["HDRskydome"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["HDRskydome"].addChild( GafferArnold.ArnoldShader( "Image2" ) )
__children["HDRskydome"]["Image2"].loadShader( "image" )
__children["HDRskydome"]["Image2"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["HDRskydome"].addChild( Gaffer.StringPlug( "parameters_filename", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["HDRskydome"].addChild( GafferArnold.ArnoldShader( "Image3" ) )
__children["HDRskydome"]["Image3"].loadShader( "image" )
__children["HDRskydome"]["Image3"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["HDRskydome"].addChild( Gaffer.ContextQuery( "ContextQuery" ) )
__children["HDRskydome"]["ContextQuery"].addQuery( Gaffer.StringPlug( "value", defaultValue = '', ) )
__children["HDRskydome"]["ContextQuery"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["HDRskydome"].addChild( GafferArnold.ArnoldLight( "SkydomeLight1" ) )
__children["HDRskydome"]["SkydomeLight1"].loadShader( "skydome_light" )
__children["HDRskydome"]["SkydomeLight1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["HDRskydome"].addChild( Gaffer.Spreadsheet( "Spreadsheet" ) )
__children["HDRskydome"]["Spreadsheet"]["rows"].addColumn( Gaffer.StringPlug( "filename", defaultValue = '', ) )
__children["HDRskydome"]["Spreadsheet"]["rows"].addRows( 5 )
__children["HDRskydome"]["Spreadsheet"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["HDRskydome"].addChild( Gaffer.StringPlug( "selector", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, substitutions = IECore.StringAlgo.Substitutions.NoSubstitutions ) )
__children["HDRskydome"].addChild( Gaffer.StringVectorDataPlug( "enabledRowNames", direction = Gaffer.Plug.Direction.Out, defaultValue = IECore.StringVectorData( [  ] ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["HDRskydome"].addChild( Gaffer.IntPlug( "activeRowIndex", direction = Gaffer.Plug.Direction.Out, defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["HDRskydome"].addChild( Gaffer.Spreadsheet.RowsPlug( "rows", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["HDRskydome"]["rows"].addColumn( Gaffer.StringPlug( "filename", defaultValue = '', ) )
__children["HDRskydome"]["rows"].addRows( 5 )
__children["HDRskydome"].addChild( Gaffer.BoxOut( "BoxOut1" ) )
__children["HDRskydome"]["BoxOut1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["HDRskydome"].addChild( Gaffer.Switch( "Switch_Batch_01" ) )
__children["HDRskydome"]["Switch_Batch_01"].setup( Gaffer.Color4fPlug( "in", defaultValue = imath.Color4f( 0, 0, 0, 0 ), ) )
__children["HDRskydome"]["Switch_Batch_01"]["in"].addChild( Gaffer.Color4fPlug( "in1", defaultValue = imath.Color4f( 0, 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["HDRskydome"]["Switch_Batch_01"]["in"].addChild( Gaffer.Color4fPlug( "in2", defaultValue = imath.Color4f( 0, 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["HDRskydome"]["Switch_Batch_01"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["HDRskydome"].addChild( Gaffer.IntPlug( "index", defaultValue = 0, minValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop4"] = Gaffer.Backdrop( "Backdrop4" )
parent.addChild( __children["Backdrop4"] )
__children["Backdrop4"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop4"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BoundQuery_Asset"] = GafferScene.BoundQuery( "BoundQuery_Asset" )
parent.addChild( __children["BoundQuery_Asset"] )
__children["BoundQuery_Asset"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Expr_Cyclo"] = Gaffer.Expression( "Expr_Cyclo" )
parent.addChild( __children["Expr_Cyclo"] )
__children["Expr_Cyclo"]["__in"].addChild( Gaffer.FloatPlug( "p0", defaultValue = -3.4028234663852886e+38, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Expr_Cyclo"]["__in"].addChild( Gaffer.BoolPlug( "p1", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Expr_Cyclo"]["__out"].addChild( Gaffer.BoolPlug( "p0", direction = Gaffer.Plug.Direction.Out, defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Expr_Cyclo"]["__out"].addChild( Gaffer.FloatPlug( "p1", direction = Gaffer.Plug.Direction.Out, defaultValue = 1.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Expr_Cyclo"]["__out"].addChild( Gaffer.FloatPlug( "p2", direction = Gaffer.Plug.Direction.Out, defaultValue = 1.0, minValue = 0.009999999776482582, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Expr_Cyclo"]["__out"].addChild( Gaffer.BoolPlug( "p3", direction = Gaffer.Plug.Direction.Out, defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Expr_Cyclo"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FramingConstraint"] = GafferScene.FramingConstraint( "FramingConstraint" )
parent.addChild( __children["FramingConstraint"] )
__children["FramingConstraint"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["out"] = GafferScene.ScenePlug( "out", direction = Gaffer.Plug.Direction.Out, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["out"] )
__children["farCam"] = GafferScene.Camera( "farCam" )
parent.addChild( __children["farCam"] )
__children["farCam"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["SetFilter4"] = GafferScene.SetFilter( "SetFilter4" )
parent.addChild( __children["SetFilter4"] )
__children["SetFilter4"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Dot1"] = Gaffer.Dot( "Dot1" )
parent.addChild( __children["Dot1"] )
__children["Dot1"].setup( GafferScene.ScenePlug( "in", ) )
__children["Dot1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Asset_In"] = GafferScene.ScenePlug( "Asset_In", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["Asset_In"] )
__children["BoxOut"] = Gaffer.BoxOut( "BoxOut" )
parent.addChild( __children["BoxOut"] )
__children["BoxOut"].setup( GafferScene.ScenePlug( "in", ) )
__children["BoxOut"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BoxIn"] = Gaffer.BoxIn( "BoxIn" )
parent.addChild( __children["BoxIn"] )
__children["BoxIn"].setup( GafferScene.ScenePlug( "out", ) )
__children["BoxIn"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Expr_Rotation"] = Gaffer.Expression( "Expr_Rotation" )
parent.addChild( __children["Expr_Rotation"] )
__children["Expr_Rotation"]["__in"].addChild( Gaffer.FloatPlug( "p0", defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Expr_Rotation"]["__in"].addChild( Gaffer.FloatPlug( "p1", defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Expr_Rotation"]["__in"].addChild( Gaffer.FloatPlug( "p2", defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Expr_Rotation"]["__in"].addChild( Gaffer.FloatPlug( "p3", defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Expr_Rotation"]["__in"].addChild( Gaffer.FloatPlug( "p4", defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Expr_Rotation"]["__in"].addChild( Gaffer.FloatPlug( "p5", defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Expr_Rotation"]["__in"].addChild( Gaffer.BoolPlug( "p6", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Expr_Rotation"]["__in"].addChild( Gaffer.BoolPlug( "p7", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Expr_Rotation"]["__in"].addChild( Gaffer.BoolPlug( "p8", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Expr_Rotation"]["__in"].addChild( Gaffer.BoolPlug( "p9", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Expr_Rotation"]["__out"].addChild( Gaffer.V3fPlug( "p0", direction = Gaffer.Plug.Direction.Out, defaultValue = imath.V3f( 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Expr_Rotation"]["__out"].addChild( Gaffer.V3fPlug( "p1", direction = Gaffer.Plug.Direction.Out, defaultValue = imath.V3f( 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Expr_Rotation"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Asset_Rot"] = GafferScene.Transform( "Asset_Rot" )
parent.addChild( __children["Asset_Rot"] )
__children["Asset_Rot"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["toggleAssetRotation"] = Gaffer.BoolPlug( "toggleAssetRotation", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["toggleAssetRotation"] )
__children["toggleSkydomeRotation"] = Gaffer.BoolPlug( "toggleSkydomeRotation", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["toggleSkydomeRotation"] )
__children["assetRotationOffset"] = Gaffer.V3fPlug( "assetRotationOffset", defaultValue = imath.V3f( 0, 35, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["assetRotationOffset"] )
__children["skydomeRotationOffset"] = Gaffer.V3fPlug( "skydomeRotationOffset", defaultValue = imath.V3f( 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["skydomeRotationOffset"] )
__children["enableSkydomeCameraRays"] = Gaffer.BoolPlug( "enableSkydomeCameraRays", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["enableSkydomeCameraRays"] )
__children["Expr_skydome"] = Gaffer.Expression( "Expr_skydome" )
parent.addChild( __children["Expr_skydome"] )
__children["Expr_skydome"]["__in"].addChild( Gaffer.BoolPlug( "p0", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Expr_skydome"]["__out"].addChild( Gaffer.FloatPlug( "p0", direction = Gaffer.Plug.Direction.Out, defaultValue = 1.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Expr_skydome"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["referenceBalls"] = Gaffer.Box( "referenceBalls" )
parent.addChild( __children["referenceBalls"] )
__children["referenceBalls"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["referenceBalls"].addChild( Gaffer.BoxOut( "BoxOut" ) )
__children["referenceBalls"]["BoxOut"].setup( GafferScene.ScenePlug( "in", ) )
__children["referenceBalls"]["BoxOut"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["referenceBalls"].addChild( GafferScene.ScenePlug( "out", direction = Gaffer.Plug.Direction.Out, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["referenceBalls"].addChild( GafferScene.Group( "Group" ) )
__children["referenceBalls"]["Group"]["in"].addChild( GafferScene.ScenePlug( "in1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["referenceBalls"]["Group"]["in"].addChild( GafferScene.ScenePlug( "in2", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["referenceBalls"]["Group"]["in"].addChild( GafferScene.ScenePlug( "in3", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["referenceBalls"]["Group"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["referenceBalls"].addChild( Gaffer.Box( "chromeBall" ) )
__children["referenceBalls"]["chromeBall"].addChild( GafferScene.Sphere( "Sphere3" ) )
__children["referenceBalls"]["chromeBall"]["Sphere3"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["referenceBalls"]["chromeBall"].addChild( GafferScene.ShaderAssignment( "ShaderAssignment6" ) )
__children["referenceBalls"]["chromeBall"]["ShaderAssignment6"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["referenceBalls"]["chromeBall"].addChild( GafferScene.ScenePlug( "out", direction = Gaffer.Plug.Direction.Out, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["referenceBalls"]["chromeBall"].addChild( GafferArnold.ArnoldShader( "StandardSurface2" ) )
__children["referenceBalls"]["chromeBall"]["StandardSurface2"].loadShader( "standard_surface" )
__children["referenceBalls"]["chromeBall"]["StandardSurface2"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["referenceBalls"]["chromeBall"].addChild( GafferArnold.ArnoldShader( "RaySwitchShader1" ) )
__children["referenceBalls"]["chromeBall"]["RaySwitchShader1"].loadShader( "ray_switch_shader" )
__children["referenceBalls"]["chromeBall"]["RaySwitchShader1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["referenceBalls"]["chromeBall"].addChild( GafferArnold.ArnoldShader( "StandardSurface6" ) )
__children["referenceBalls"]["chromeBall"]["StandardSurface6"].loadShader( "standard_surface" )
__children["referenceBalls"]["chromeBall"]["StandardSurface6"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["referenceBalls"]["chromeBall"].addChild( Gaffer.BoxOut( "BoxOut" ) )
__children["referenceBalls"]["chromeBall"]["BoxOut"].setup( GafferScene.ScenePlug( "in", ) )
__children["referenceBalls"]["chromeBall"]["BoxOut"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["referenceBalls"]["chromeBall"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["referenceBalls"].addChild( Gaffer.Box( "greyBall" ) )
__children["referenceBalls"]["greyBall"].addChild( GafferScene.Sphere( "Sphere2" ) )
__children["referenceBalls"]["greyBall"]["Sphere2"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["referenceBalls"]["greyBall"].addChild( GafferScene.ShaderAssignment( "ShaderAssignment5" ) )
__children["referenceBalls"]["greyBall"]["ShaderAssignment5"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["referenceBalls"]["greyBall"].addChild( GafferScene.ScenePlug( "out", direction = Gaffer.Plug.Direction.Out, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["referenceBalls"]["greyBall"].addChild( GafferArnold.ArnoldShader( "StandardSurface1" ) )
__children["referenceBalls"]["greyBall"]["StandardSurface1"].loadShader( "standard_surface" )
__children["referenceBalls"]["greyBall"]["StandardSurface1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["referenceBalls"]["greyBall"].addChild( GafferArnold.ArnoldShader( "RaySwitchShader2" ) )
__children["referenceBalls"]["greyBall"]["RaySwitchShader2"].loadShader( "ray_switch_shader" )
__children["referenceBalls"]["greyBall"]["RaySwitchShader2"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["referenceBalls"]["greyBall"].addChild( GafferArnold.ArnoldShader( "StandardSurface7" ) )
__children["referenceBalls"]["greyBall"]["StandardSurface7"].loadShader( "standard_surface" )
__children["referenceBalls"]["greyBall"]["StandardSurface7"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["referenceBalls"]["greyBall"].addChild( Gaffer.BoxOut( "BoxOut" ) )
__children["referenceBalls"]["greyBall"]["BoxOut"].setup( GafferScene.ScenePlug( "in", ) )
__children["referenceBalls"]["greyBall"]["BoxOut"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["referenceBalls"]["greyBall"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["referenceBalls"].addChild( Gaffer.Box( "whiteBall" ) )
__children["referenceBalls"]["whiteBall"].addChild( GafferScene.Sphere( "Sphere1" ) )
__children["referenceBalls"]["whiteBall"]["Sphere1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["referenceBalls"]["whiteBall"].addChild( GafferScene.ShaderAssignment( "ShaderAssignment4" ) )
__children["referenceBalls"]["whiteBall"]["ShaderAssignment4"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["referenceBalls"]["whiteBall"].addChild( GafferScene.ScenePlug( "out", direction = Gaffer.Plug.Direction.Out, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["referenceBalls"]["whiteBall"].addChild( GafferArnold.ArnoldShader( "StandardSurface" ) )
__children["referenceBalls"]["whiteBall"]["StandardSurface"].loadShader( "standard_surface" )
__children["referenceBalls"]["whiteBall"]["StandardSurface"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["referenceBalls"]["whiteBall"].addChild( GafferArnold.ArnoldShader( "RaySwitchShader3" ) )
__children["referenceBalls"]["whiteBall"]["RaySwitchShader3"].loadShader( "ray_switch_shader" )
__children["referenceBalls"]["whiteBall"]["RaySwitchShader3"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["referenceBalls"]["whiteBall"].addChild( GafferArnold.ArnoldShader( "StandardSurface8" ) )
__children["referenceBalls"]["whiteBall"]["StandardSurface8"].loadShader( "standard_surface" )
__children["referenceBalls"]["whiteBall"]["StandardSurface8"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["referenceBalls"]["whiteBall"].addChild( Gaffer.BoxOut( "BoxOut" ) )
__children["referenceBalls"]["whiteBall"]["BoxOut"].setup( GafferScene.ScenePlug( "in", ) )
__children["referenceBalls"]["whiteBall"]["BoxOut"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["referenceBalls"]["whiteBall"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["referenceBalls"].addChild( GafferScene.SetFilter( "SetFilter" ) )
__children["referenceBalls"]["SetFilter"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["referenceBalls"].addChild( Gaffer.BoolPlug( "attributes_visibility_enabled", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["referenceBalls"].addChild( GafferScene.Prune( "Prune" ) )
__children["referenceBalls"]["Prune"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["referenceBalls"].addChild( Gaffer.Switch( "Switch" ) )
__children["referenceBalls"]["Switch"].setup( GafferScene.ScenePlug( "in", ) )
__children["referenceBalls"]["Switch"]["in"].addChild( GafferScene.ScenePlug( "in1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["referenceBalls"]["Switch"]["in"].addChild( GafferScene.ScenePlug( "in2", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["referenceBalls"]["Switch"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["referenceBalls"].addChild( GafferScene.Set( "Set" ) )
__children["referenceBalls"]["Set"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["referenceBalls"].addChild( GafferScene.PathFilter( "PathFilter" ) )
__children["referenceBalls"]["PathFilter"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Parent3"] = GafferScene.Parent( "Parent3" )
parent.addChild( __children["Parent3"] )
__children["Parent3"]["children"].addChild( GafferScene.ScenePlug( "child1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Parent3"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["referenceTransform"] = GafferScene.Transform( "referenceTransform" )
parent.addChild( __children["referenceTransform"] )
__children["referenceTransform"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PathFilter4"] = GafferScene.PathFilter( "PathFilter4" )
parent.addChild( __children["PathFilter4"] )
__children["PathFilter4"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Cyclo"] = Gaffer.Box( "Cyclo" )
parent.addChild( __children["Cyclo"] )
__children["Cyclo"].addChild( GafferScene.SceneReader( "cyclo" ) )
__children["Cyclo"]["cyclo"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Cyclo"].addChild( Gaffer.FloatPlug( "transform_scale_x", defaultValue = 1.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Cyclo"].addChild( GafferScene.Set( "Set" ) )
__children["Cyclo"]["Set"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Cyclo"].addChild( GafferScene.ScenePlug( "out", direction = Gaffer.Plug.Direction.Out, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Cyclo"].addChild( GafferScene.PathFilter( "PathFilter" ) )
__children["Cyclo"]["PathFilter"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Cyclo"].addChild( Gaffer.BoxOut( "BoxOut" ) )
__children["Cyclo"]["BoxOut"].setup( GafferScene.ScenePlug( "in", ) )
__children["Cyclo"]["BoxOut"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Cyclo"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Cyclo"].addChild( GafferScene.ShaderAssignment( "CycloShaderAssign" ) )
__children["Cyclo"]["CycloShaderAssign"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Cyclo"].addChild( GafferScene.MeshType( "CycloSubdiv" ) )
__children["Cyclo"]["CycloSubdiv"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Cyclo"].addChild( GafferScene.StandardAttributes( "AttrSides" ) )
__children["Cyclo"]["AttrSides"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Cyclo"].addChild( GafferArnold.ArnoldShader( "CycloDarkGreyCamera" ) )
__children["Cyclo"]["CycloDarkGreyCamera"].loadShader( "standard_surface" )
__children["Cyclo"]["CycloDarkGreyCamera"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Cyclo"].addChild( GafferArnold.ArnoldShader( "CycloRaySwitchShader" ) )
__children["Cyclo"]["CycloRaySwitchShader"].loadShader( "ray_switch_shader" )
__children["Cyclo"]["CycloRaySwitchShader"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Cyclo"].addChild( GafferArnold.ArnoldShader( "CycloGreyBounces" ) )
__children["Cyclo"]["CycloGreyBounces"].loadShader( "standard_surface" )
__children["Cyclo"]["CycloGreyBounces"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Cyclo"].addChild( GafferArnold.ArnoldAttributes( "CycloArnoldAttributes" ) )
__children["Cyclo"]["CycloArnoldAttributes"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["enableCycloCameraRays"] = Gaffer.BoolPlug( "enableCycloCameraRays", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["enableCycloCameraRays"] )
__children["enableRefSpheres"] = Gaffer.BoolPlug( "enableRefSpheres", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["enableRefSpheres"] )
__children["Expr_refSpheres_and_cam"] = Gaffer.Expression( "Expr_refSpheres_and_cam" )
parent.addChild( __children["Expr_refSpheres_and_cam"] )
__children["Expr_refSpheres_and_cam"]["__in"].addChild( Gaffer.FloatPlug( "p0", defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Expr_refSpheres_and_cam"]["__in"].addChild( Gaffer.BoolPlug( "p1", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Expr_refSpheres_and_cam"]["__out"].addChild( Gaffer.FloatPlug( "p0", direction = Gaffer.Plug.Direction.Out, defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Expr_refSpheres_and_cam"]["__out"].addChild( Gaffer.IntPlug( "p1", direction = Gaffer.Plug.Direction.Out, defaultValue = 0, minValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Expr_refSpheres_and_cam"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["cameraPadding"] = Gaffer.FloatPlug( "cameraPadding", defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["cameraPadding"] )
__children["PathFilter"] = GafferScene.PathFilter( "PathFilter" )
parent.addChild( __children["PathFilter"] )
__children["PathFilter"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["OpenGLAttributes"] = GafferScene.OpenGLAttributes( "OpenGLAttributes" )
parent.addChild( __children["OpenGLAttributes"] )
__children["OpenGLAttributes"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PathFilter5"] = GafferScene.PathFilter( "PathFilter5" )
parent.addChild( __children["PathFilter5"] )
__children["PathFilter5"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["hdriRepo"] = Gaffer.StringPlug( "hdriRepo", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["hdriRepo"] )
__children["hdriChooser"] = Gaffer.StringPlug( "hdriChooser", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["hdriChooser"] )
__children["selectedHDRI"] = Gaffer.StringPlug( "selectedHDRI", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["selectedHDRI"] )
__children["hdrisFound"] = Gaffer.StringVectorDataPlug( "hdrisFound", defaultValue = IECore.StringVectorData( [  ] ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["hdrisFound"] )
__children["Exposure"] = Gaffer.FloatPlug( "Exposure", defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["Exposure"] )
__children["resolution"] = Gaffer.IntPlug( "resolution", defaultValue = 2000, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["resolution"] )
__children["samples"] = Gaffer.IntPlug( "samples", defaultValue = 3, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["samples"] )
__children["button"] = Gaffer.StringPlug( "button", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["button"] )
__children["toogleInvertAssetRotation"] = Gaffer.BoolPlug( "toogleInvertAssetRotation", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["toogleInvertAssetRotation"] )
__children["toogleInvertSkydomeRotation"] = Gaffer.BoolPlug( "toogleInvertSkydomeRotation", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["toogleInvertSkydomeRotation"] )
__children["HDRINames"] = Gaffer.StringVectorDataPlug( "HDRINames", defaultValue = IECore.StringVectorData( [  ] ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["HDRINames"] )
__children["enabledRowNames"] = Gaffer.StringVectorDataPlug( "enabledRowNames", direction = Gaffer.Plug.Direction.Out, defaultValue = IECore.StringVectorData( [  ] ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["enabledRowNames"] )
__children["selector"] = Gaffer.StringPlug( "selector", defaultValue = '${hdri:value}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, substitutions = IECore.StringAlgo.Substitutions.NoSubstitutions )
parent.addChild( __children["selector"] )
__children["activeRowIndex"] = Gaffer.IntPlug( "activeRowIndex", direction = Gaffer.Plug.Direction.Out, defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["activeRowIndex"] )
__children["rows"] = Gaffer.Spreadsheet.RowsPlug( "rows", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["rows"] )
__children["rows"].addColumn( Gaffer.StringPlug( "filename", defaultValue = '', ) )
__children["rows"].addRows( 5 )
__children["index"] = Gaffer.IntPlug( "index", defaultValue = 0, minValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["index"] )
__children["target"] = Gaffer.StringPlug( "target", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["target"] )
__children["targetFrame"] = Gaffer.FloatPlug( "targetFrame", defaultValue = 1001.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["targetFrame"] )
__children["ContextVariables_LiveRendering"] = Gaffer.ContextVariables( "ContextVariables_LiveRendering" )
parent.addChild( __children["ContextVariables_LiveRendering"] )
__children["ContextVariables_LiveRendering"].setup( GafferScene.ScenePlug( "in", ) )
__children["ContextVariables_LiveRendering"]["variables"].addChild( Gaffer.NameValuePlug( "", Gaffer.StringPlug( "value", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "member1", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["ContextVariables_LiveRendering"]["variables"].addChild( Gaffer.NameValuePlug( "", Gaffer.StringVectorDataPlug( "value", defaultValue = IECore.StringVectorData( [  ] ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "member2", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["ContextVariables_LiveRendering"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Switch_Batch_02"] = Gaffer.Switch( "Switch_Batch_02" )
parent.addChild( __children["Switch_Batch_02"] )
__children["Switch_Batch_02"].setup( GafferScene.ScenePlug( "in", ) )
__children["Switch_Batch_02"]["in"].addChild( GafferScene.ScenePlug( "in1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Switch_Batch_02"]["in"].addChild( GafferScene.ScenePlug( "in2", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Switch_Batch_02"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Group3"]["in"][0].setInput( __children["HDRskydome"]["out"] )
__children["Group3"]["in"][1].setInput( __children["OpenGLAttributes"]["out"] )
__children["Group3"]["name"].setValue( 'LGT' )
__children["Group3"]["__uiPosition"].setValue( imath.V2f( 51.0096245, 106.322182 ) )
__children["Group4"]["in"][0].setInput( __children["Asset_Rot"]["out"] )
__children["Group4"]["in"][1].setInput( __children["Group3"]["out"] )
__children["Group4"]["in"][2].setInput( __children["referenceTransform"]["out"] )
__children["Group4"]["name"].setValue( 'world' )
__children["Group4"]["__uiPosition"].setValue( imath.V2f( 9.90411758, 98.1581192 ) )
__children["CAM_group"]["in"][0].setInput( __children["farCam"]["out"] )
__children["CAM_group"]["name"].setValue( 'CAM' )
__children["CAM_group"]["__uiPosition"].setValue( imath.V2f( 90.0845795, 122.650299 ) )
Gaffer.Metadata.registerValue( __children["HDRskydome"], 'uiEditor:emptySections', IECore.StringVectorData( [  ] ) )
Gaffer.Metadata.registerValue( __children["HDRskydome"], 'uiEditor:emptySectionIndices', IECore.IntVectorData( [  ] ) )
Gaffer.Metadata.registerValue( __children["HDRskydome"]["user"], 'layout:section', 'User' )
__children["HDRskydome"]["SkydomeLight"]["name"].setValue( 'skydomeLight' )
__children["HDRskydome"]["SkydomeLight"]["transform"]["rotate"].setInput( __children["Expr_Rotation"]["__out"]["p1"] )
__children["HDRskydome"]["SkydomeLight"]["parameters"]["color"].setInput( __children["HDRskydome"]["Switch_Batch_01"]["out"] )
__children["HDRskydome"]["SkydomeLight"]["parameters"]["exposure"].setInput( __children["Exposure"] )
__children["HDRskydome"]["SkydomeLight"]["parameters"]["samples"].setValue( 3 )
__children["HDRskydome"]["SkydomeLight"]["parameters"]["camera"].setInput( __children["Expr_skydome"]["__out"]["p0"] )
Gaffer.Metadata.registerValue( __children["HDRskydome"]["SkydomeLight"]["parameters"]["shader"], 'readOnly', False )
__children["HDRskydome"]["SkydomeLight"]["parameters"]["resolution"].setInput( __children["resolution"] )
__children["HDRskydome"]["SkydomeLight"]["parameters"]["format"].setValue( 'latlong' )
__children["HDRskydome"]["SkydomeLight"]["visualiserAttributes"]["scale"]["enabled"].setValue( True )
__children["HDRskydome"]["SkydomeLight"]["visualiserAttributes"]["maxTextureResolution"]["value"].setValue( 2048 )
__children["HDRskydome"]["SkydomeLight"]["visualiserAttributes"]["scale"]["value"].setInput( __children["Expr_Cyclo"]["__out"]["p2"] )
__children["HDRskydome"]["SkydomeLight"]["__uiPosition"].setValue( imath.V2f( 40.1493912, 18.6743526 ) )
__children["HDRskydome"]["out"].setInput( __children["HDRskydome"]["BoxOut"]["__out"] )
Gaffer.Metadata.registerValue( __children["HDRskydome"]["out"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["HDRskydome"]["out"], 'description', 'The output scene.' )
Gaffer.Metadata.registerValue( __children["HDRskydome"]["out"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["HDRskydome"]["out"], 'layout:index', 0 )
__children["HDRskydome"]["BoxOut"]["in"].setInput( __children["HDRskydome"]["SkydomeLight"]["out"] )
Gaffer.Metadata.registerValue( __children["HDRskydome"]["BoxOut"]["__out"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["HDRskydome"]["BoxOut"]["__out"], 'description', 'The output scene.' )
__children["HDRskydome"]["BoxOut"]["__uiPosition"].setValue( imath.V2f( 41.6493912, -2.94638348 ) )
__children["HDRskydome"]["__uiPosition"].setValue( imath.V2f( 35.7464256, 114.654213 ) )
Gaffer.Metadata.registerValue( __children["HDRskydome"]["__uiPosition"], 'layout:section', 'Settings' )
__children["HDRskydome"]["Image2"]["parameters"]["filename"].setInput( __children["HDRskydome"]["Spreadsheet"]["out"]["filename"] )
__children["HDRskydome"]["Image2"]["__uiPosition"].setValue( imath.V2f( 12.7684317, 37.7111664 ) )
__children["HDRskydome"]["parameters_filename"].setInput( __children["hdriChooser"] )
Gaffer.Metadata.registerValue( __children["HDRskydome"]["parameters_filename"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["HDRskydome"]["parameters_filename"], 'noduleLayout:label', 'Filename' )
Gaffer.Metadata.registerValue( __children["HDRskydome"]["parameters_filename"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["HDRskydome"]["parameters_filename"], 'plugValueWidget:type', 'GafferUI.PathPlugValueWidget' )
Gaffer.Metadata.registerValue( __children["HDRskydome"]["parameters_filename"], 'label', 'Filename' )
Gaffer.Metadata.registerValue( __children["HDRskydome"]["parameters_filename"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["HDRskydome"]["parameters_filename"], 'layout:index', 1 )
__children["HDRskydome"]["Image3"]["parameters"]["filename"].setInput( __children["HDRskydome"]["ContextQuery"]["out"][0]["value"] )
__children["HDRskydome"]["Image3"]["__uiPosition"].setValue( imath.V2f( 9.26561928, 29.7111645 ) )
__children["HDRskydome"]["ContextQuery"]["queries"][0]["name"].setValue( 'hdri:value' )
__children["HDRskydome"]["ContextQuery"]["queries"][0]["value"].setValue( 'E:/DL/HDRI/rosendal_mountain_midmorning_4k.exr' )
__children["HDRskydome"]["ContextQuery"]["__uiPosition"].setValue( imath.V2f( -1.13255632, 29.8835011 ) )
__children["HDRskydome"]["SkydomeLight1"]["name"].setValue( 'skydomeLight' )
__children["HDRskydome"]["SkydomeLight1"]["parameters"]["format"].setValue( 'latlong' )
__children["HDRskydome"]["SkydomeLight1"]["__uiPosition"].setValue( imath.V2f( 57.898674, 13.983758 ) )
Gaffer.Metadata.registerValue( __children["HDRskydome"]["Spreadsheet"], 'nodeGadget:type', 'GafferUI::StandardNodeGadget' )
__children["HDRskydome"]["Spreadsheet"]["selector"].setInput( __children["HDRskydome"]["selector"] )
__children["HDRskydome"]["Spreadsheet"]["rows"].setInput( __children["HDRskydome"]["rows"] )
Gaffer.Metadata.registerValue( __children["HDRskydome"]["Spreadsheet"]["rows"][0]["cells"]["filename"], 'spreadsheet:columnIndex', 0 )
Gaffer.Metadata.registerValue( __children["HDRskydome"]["Spreadsheet"]["rows"][0]["cells"]["filename"]["value"], 'ui:scene:acceptsSetName:promotable', False )
Gaffer.Metadata.registerValue( __children["HDRskydome"]["Spreadsheet"]["rows"][0]["cells"]["filename"]["value"], 'ui:scene:acceptsSetNames:promotable', False )
Gaffer.Metadata.registerValue( __children["HDRskydome"]["Spreadsheet"]["rows"][0]["cells"]["filename"]["value"], 'ui:scene:acceptsSetExpression:promotable', False )
Gaffer.Metadata.registerValue( __children["HDRskydome"]["Spreadsheet"]["rows"][0]["cells"]["filename"]["value"], 'renameable:promotable', False )
Gaffer.Metadata.registerValue( __children["HDRskydome"]["Spreadsheet"]["rows"][0]["cells"]["filename"]["value"], 'deletable:promotable', False )
Gaffer.Metadata.registerValue( __children["HDRskydome"]["Spreadsheet"]["rows"][0]["cells"]["filename"]["value"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["HDRskydome"]["Spreadsheet"]["rows"][0]["cells"]["filename"]["value"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["HDRskydome"]["Spreadsheet"]["rows"][0]["cells"]["filename"]["value"], 'plugValueWidget:type', 'GafferUI.PathPlugValueWidget' )
Gaffer.Metadata.registerValue( __children["HDRskydome"]["Spreadsheet"]["rows"][0]["cells"]["filename"]["value"], 'noduleLayout:visible', None )
Gaffer.Metadata.registerValue( __children["HDRskydome"]["Spreadsheet"]["rows"][0]["cells"]["filename"]["value"], 'scenePathPlugValueWidget:setsLabel', None )
Gaffer.Metadata.registerValue( __children["HDRskydome"]["Spreadsheet"]["rows"][0]["cells"]["filename"]["value"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["HDRskydome"]["Spreadsheet"]["rows"][0]["cells"]["filename"]["value"], 'label', 'Filename' )
Gaffer.Metadata.registerValue( __children["HDRskydome"]["Spreadsheet"]["rows"][0]["cells"]["filename"]["value"], 'noduleLayout:label', 'Filename' )
Gaffer.Metadata.registerValue( __children["HDRskydome"]["Spreadsheet"]["rows"][0]["cells"]["filename"]["value"], 'scenePathPlugValueWidget:setNames', None )
Gaffer.Metadata.registerValue( __children["HDRskydome"]["Spreadsheet"]["rows"][0]["cells"]["filename"]["value"], 'presetNames', None )
Gaffer.Metadata.registerValue( __children["HDRskydome"]["Spreadsheet"]["rows"][0]["cells"]["filename"]["value"], 'presetValues', None )
Gaffer.Metadata.registerValue( __children["HDRskydome"]["Spreadsheet"]["rows"][0]["cells"]["filename"]["value"], 'description', None )
__children["HDRskydome"]["Spreadsheet"]["__uiPosition"].setValue( imath.V2f( -5.15924454, 37.5058594 ) )
__children["HDRskydome"]["selector"].setInput( __children["selector"] )
Gaffer.Metadata.registerValue( __children["HDRskydome"]["selector"], 'description', 'The value that the row names will be matched against.\nTypically this will refer to a Context Variable using\nthe `${variableName}` syntax.' )
Gaffer.Metadata.registerValue( __children["HDRskydome"]["selector"], 'preset:Render Pass', '${renderPass}' )
Gaffer.Metadata.registerValue( __children["HDRskydome"]["selector"], 'divider', True )
Gaffer.Metadata.registerValue( __children["HDRskydome"]["selector"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["HDRskydome"]["selector"], 'layout:section', 'Spreadsheet' )
Gaffer.Metadata.registerValue( __children["HDRskydome"]["selector"], 'layout:index', 2 )
__children["HDRskydome"]["enabledRowNames"].setInput( __children["HDRskydome"]["Spreadsheet"]["enabledRowNames"] )
Gaffer.Metadata.registerValue( __children["HDRskydome"]["enabledRowNames"], 'description', 'An output plug containing the names of all currently enabled rows.' )
Gaffer.Metadata.registerValue( __children["HDRskydome"]["enabledRowNames"], 'plugValueWidget:type', 'GafferUI.ConnectionPlugValueWidget' )
Gaffer.Metadata.registerValue( __children["HDRskydome"]["enabledRowNames"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["HDRskydome"]["enabledRowNames"], 'layout:section', 'Spreadsheet.Advanced' )
Gaffer.Metadata.registerValue( __children["HDRskydome"]["enabledRowNames"], 'layout:index', 4 )
__children["HDRskydome"]["activeRowIndex"].setInput( __children["HDRskydome"]["Spreadsheet"]["activeRowIndex"] )
Gaffer.Metadata.registerValue( __children["HDRskydome"]["activeRowIndex"], 'description', "An output containing the index of the row that matches the selector\nin the current context.\n\n> Tip : The default row has index `0`, which converts to `False`\n> when used to drive a BoolPlug via a connection (all other values\n> convert to `True`). Therefore `Spreadsheet.activeRowIndex` can\n> be connected to a Node's `enabled` plug to disable the node when\n> no row is matched." )
Gaffer.Metadata.registerValue( __children["HDRskydome"]["activeRowIndex"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["HDRskydome"]["activeRowIndex"], 'layout:section', 'Spreadsheet.Advanced' )
Gaffer.Metadata.registerValue( __children["HDRskydome"]["activeRowIndex"], 'layout:index', 5 )
__children["HDRskydome"]["rows"].setInput( __children["rows"] )
Gaffer.Metadata.registerValue( __children["HDRskydome"]["rows"], 'description', 'Holds a child RowPlug for each row in the spreadsheet.' )
Gaffer.Metadata.registerValue( __children["HDRskydome"]["rows"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["HDRskydome"]["rows"][0], 'description', 'The default row. This provides output values when no other\nrow matches the `selector`.' )
Gaffer.Metadata.registerValue( __children["HDRskydome"]["rows"][0]["name"], 'description', "The name of the row. This is matched against the `selector`\nto determine which row is chosen to be passed to the output.\nMay contain multiple space separated names and any of Gaffer's\nstandard wildcards." )
Gaffer.Metadata.registerValue( __children["HDRskydome"]["rows"][0]["enabled"], 'description', 'Enables or disables this row. Disabled rows are ignored.' )
Gaffer.Metadata.registerValue( __children["HDRskydome"]["rows"][0]["cells"], 'description', 'Contains a child CellPlug for each column in the spreadsheet.' )
Gaffer.Metadata.registerValue( __children["HDRskydome"]["rows"][0]["cells"]["filename"], 'spreadsheet:columnIndex', 0 )
Gaffer.Metadata.registerValue( __children["HDRskydome"]["rows"][0]["cells"]["filename"]["value"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["HDRskydome"]["rows"][0]["cells"]["filename"]["value"], 'plugValueWidget:type', 'GafferUI.PathPlugValueWidget' )
Gaffer.Metadata.registerValue( __children["HDRskydome"]["rows"][0]["cells"]["filename"]["value"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["HDRskydome"]["rows"][0]["cells"]["filename"]["value"], 'label', 'Filename' )
Gaffer.Metadata.registerValue( __children["HDRskydome"]["rows"][0]["cells"]["filename"]["value"], 'noduleLayout:label', 'Filename' )
__children["HDRskydome"]["BoxOut1"]["__uiPosition"].setValue( imath.V2f( 53.1001091, -2.78783894 ) )
__children["HDRskydome"]["Switch_Batch_01"]["index"].setInput( __children["HDRskydome"]["index"] )
Gaffer.Metadata.registerValue( __children["HDRskydome"]["Switch_Batch_01"]["in"], 'noduleLayout:section', 'top' )
__children["HDRskydome"]["Switch_Batch_01"]["in"][0].setInput( __children["HDRskydome"]["Image3"]["out"] )
__children["HDRskydome"]["Switch_Batch_01"]["in"][1].setInput( __children["HDRskydome"]["Image2"]["out"] )
Gaffer.Metadata.registerValue( __children["HDRskydome"]["Switch_Batch_01"]["out"], 'noduleLayout:section', 'bottom' )
__children["HDRskydome"]["Switch_Batch_01"]["__uiPosition"].setValue( imath.V2f( 20.2692814, 23.6299152 ) )
__children["HDRskydome"]["index"].setInput( __children["index"] )
Gaffer.Metadata.registerValue( __children["HDRskydome"]["index"], 'description', 'The index of the input which is passed through. A value\nof 0 chooses the first input, 1 the second and so on. Values\nlarger than the number of available inputs wrap back around to\nthe beginning.' )
Gaffer.Metadata.registerValue( __children["HDRskydome"]["index"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["HDRskydome"]["index"], 'label', 'Batch Render' )
Gaffer.Metadata.registerValue( __children["HDRskydome"]["index"], 'plugValueWidget:type', 'GafferUI.BoolPlugValueWidget' )
__children["Backdrop4"]["title"].setValue( 'Turntable Setup' )
__children["Backdrop4"]["scale"].setValue( 1.5 )
__children["Backdrop4"]["__uiPosition"].setValue( imath.V2f( 53.7599487, 113.581146 ) )
__children["Backdrop4"]["__uiBound"].setValue( imath.Box2f( imath.V2f( -69.1206512, -48.3169785 ), imath.V2f( 89.1496124, 28.7533417 ) ) )
__children["BoundQuery_Asset"]["scene"].setInput( __children["Dot1"]["out"] )
__children["BoundQuery_Asset"]["location"].setValue( '/' )
__children["BoundQuery_Asset"]["space"].setValue( 0 )
__children["BoundQuery_Asset"]["__uiPosition"].setValue( imath.V2f( 50.4639587, 140.751389 ) )
Gaffer.Metadata.registerValue( __children["Expr_Cyclo"], 'nodeGadget:type', 'GafferUI::StandardNodeGadget' )
__children["Expr_Cyclo"]["__in"]["p0"].setInput( __children["BoundQuery_Asset"]["bound"]["max"]["x"] )
__children["Expr_Cyclo"]["__in"]["p1"].setInput( __children["enableCycloCameraRays"] )
__children["Expr_Cyclo"]["__uiPosition"].setValue( imath.V2f( 50.7417831, 126.994476 ) )
__children["FramingConstraint"]["in"].setInput( __children["Group4"]["out"] )
__children["FramingConstraint"]["filter"].setInput( __children["SetFilter4"]["out"] )
__children["FramingConstraint"]["target"].setInput( __children["target"] )
__children["FramingConstraint"]["ignoreMissingTarget"].setValue( True )
__children["FramingConstraint"]["padding"].setInput( __children["Expr_refSpheres_and_cam"]["__out"]["p0"] )
__children["FramingConstraint"]["useTargetFrame"].setValue( True )
__children["FramingConstraint"]["targetFrame"].setInput( __children["targetFrame"] )
__children["FramingConstraint"]["__uiPosition"].setValue( imath.V2f( 9.90411758, 92.0757828 ) )
__children["out"].setInput( __children["BoxOut"]["__out"] )
Gaffer.Metadata.registerValue( __children["out"], 'description', 'The processed output scene.' )
Gaffer.Metadata.registerValue( __children["out"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["out"], 'layout:section', 'Turntable' )
Gaffer.Metadata.registerValue( __children["out"], 'layout:index', 1 )
__children["farCam"]["name"].setValue( 'farCam' )
__children["farCam"]["sets"].setValue( 'cam' )
__children["farCam"]["transform"]["translate"].setValue( imath.V3f( -14769.6475, 15.2287216, 33161.9766 ) )
__children["farCam"]["transform"]["rotate"].setValue( imath.V3f( -5, 0, 1.83828142e-05 ) )
__children["farCam"]["perspectiveMode"].setValue( 1 )
__children["farCam"]["focalLength"].setValue( 85.0 )
__children["farCam"]["clippingPlanes"].setValue( imath.V2f( 0.100000001, 1000000 ) )
__children["farCam"]["visualiserAttributes"]["scale"]["value"].setValue( 10.0 )
__children["farCam"]["visualiserAttributes"]["scale"]["enabled"].setValue( True )
__children["farCam"]["__uiPosition"].setValue( imath.V2f( 88.5845795, 130.814362 ) )
__children["SetFilter4"]["setExpression"].setValue( 'cam' )
__children["SetFilter4"]["__uiPosition"].setValue( imath.V2f( 25.6188927, 96.0563278 ) )
__children["Dot1"]["in"].setInput( __children["BoxIn"]["out"] )
__children["Dot1"]["__uiPosition"].setValue( imath.V2f( 5.40411711, 148.08342 ) )
Gaffer.Metadata.registerValue( __children["Asset_In"], 'plugValueWidget:type', '' )
Gaffer.Metadata.registerValue( __children["Asset_In"], 'layout:section', 'Turntable' )
Gaffer.Metadata.registerValue( __children["Asset_In"], 'layout:index', 2 )
__children["BoxOut"]["in"].setInput( __children["Switch_Batch_02"]["out"] )
Gaffer.Metadata.registerValue( __children["BoxOut"]["__out"], 'description', 'The processed output scene.' )
Gaffer.Metadata.registerValue( __children["BoxOut"]["__out"], 'nodule:type', 'GafferUI::StandardNodule' )
__children["BoxOut"]["__uiPosition"].setValue( imath.V2f( 11.3878689, 58.7461433 ) )
__children["BoxIn"]["name"].setValue( 'Asset_In' )
__children["BoxIn"]["__in"].setInput( __children["Asset_In"] )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'plugValueWidget:type', '' )
__children["BoxIn"]["__uiPosition"].setValue( imath.V2f( 5.40491343, 155.58342 ) )
Gaffer.Metadata.registerValue( __children["Expr_Rotation"], 'nodeGadget:type', 'GafferUI::StandardNodeGadget' )
__children["Expr_Rotation"]["__in"]["p0"].setInput( __children["assetRotationOffset"]["x"] )
__children["Expr_Rotation"]["__in"]["p1"].setInput( __children["assetRotationOffset"]["y"] )
__children["Expr_Rotation"]["__in"]["p2"].setInput( __children["assetRotationOffset"]["z"] )
__children["Expr_Rotation"]["__in"]["p3"].setInput( __children["skydomeRotationOffset"]["x"] )
__children["Expr_Rotation"]["__in"]["p4"].setInput( __children["skydomeRotationOffset"]["y"] )
__children["Expr_Rotation"]["__in"]["p5"].setInput( __children["skydomeRotationOffset"]["z"] )
__children["Expr_Rotation"]["__in"]["p6"].setInput( __children["toggleAssetRotation"] )
__children["Expr_Rotation"]["__in"]["p7"].setInput( __children["toggleSkydomeRotation"] )
__children["Expr_Rotation"]["__in"]["p8"].setInput( __children["toogleInvertAssetRotation"] )
__children["Expr_Rotation"]["__in"]["p9"].setInput( __children["toogleInvertSkydomeRotation"] )
__children["Expr_Rotation"]["__uiPosition"].setValue( imath.V2f( -1.5577786, 121.489075 ) )
__children["Asset_Rot"]["in"].setInput( __children["Dot1"]["out"] )
__children["Asset_Rot"]["filter"].setInput( __children["PathFilter"]["out"] )
__children["Asset_Rot"]["transform"]["rotate"].setInput( __children["Expr_Rotation"]["__out"]["p0"] )
__children["Asset_Rot"]["__uiPosition"].setValue( imath.V2f( 5.40411758, 111.9282 ) )
Gaffer.Metadata.registerValue( __children["toggleAssetRotation"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["toggleAssetRotation"], 'layout:section', 'Turntable.Asset' )
Gaffer.Metadata.registerValue( __children["toggleAssetRotation"], 'layout:index', 4 )
Gaffer.Metadata.registerValue( __children["toggleAssetRotation"], 'description', '' )
Gaffer.Metadata.registerValue( __children["toggleAssetRotation"], 'divider', False )
Gaffer.Metadata.registerValue( __children["toggleAssetRotation"], 'label', 'Toggle Asset Rotation' )
Gaffer.Metadata.registerValue( __children["toggleSkydomeRotation"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["toggleSkydomeRotation"], 'layout:section', 'Turntable.Skydome' )
Gaffer.Metadata.registerValue( __children["toggleSkydomeRotation"], 'label', 'Toggle Skydome Rotation' )
Gaffer.Metadata.registerValue( __children["toggleSkydomeRotation"], 'layout:index', 7 )
Gaffer.Metadata.registerValue( __children["assetRotationOffset"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["assetRotationOffset"], 'layout:section', 'Turntable.Asset' )
Gaffer.Metadata.registerValue( __children["assetRotationOffset"], 'label', 'Asset Rotation Offset' )
Gaffer.Metadata.registerValue( __children["assetRotationOffset"], 'layout:index', 5 )
Gaffer.Metadata.registerValue( __children["assetRotationOffset"], 'divider', False )
Gaffer.Metadata.registerValue( __children["assetRotationOffset"]["x"], 'readOnly', False )
Gaffer.Metadata.registerValue( __children["skydomeRotationOffset"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["skydomeRotationOffset"], 'label', 'Skydome Offset' )
Gaffer.Metadata.registerValue( __children["skydomeRotationOffset"], 'divider', False )
Gaffer.Metadata.registerValue( __children["skydomeRotationOffset"], 'layout:section', 'Turntable.Skydome' )
Gaffer.Metadata.registerValue( __children["skydomeRotationOffset"], 'layout:index', 8 )
Gaffer.Metadata.registerValue( __children["enableSkydomeCameraRays"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["enableSkydomeCameraRays"], 'layout:section', 'Turntable.Visibility' )
Gaffer.Metadata.registerValue( __children["enableSkydomeCameraRays"], 'layout:index', 11 )
Gaffer.Metadata.registerValue( __children["Expr_skydome"], 'nodeGadget:type', 'GafferUI::StandardNodeGadget' )
__children["Expr_skydome"]["__in"]["p0"].setInput( __children["enableSkydomeCameraRays"] )
__children["Expr_skydome"]["__uiPosition"].setValue( imath.V2f( 33.2014313, 125.082382 ) )
__children["referenceBalls"]["__uiPosition"].setValue( imath.V2f( 105.141113, 122.818275 ) )
__children["referenceBalls"]["BoxOut"]["in"].setInput( __children["referenceBalls"]["Switch"]["out"] )
Gaffer.Metadata.registerValue( __children["referenceBalls"]["BoxOut"]["in"], 'noduleLayout:section', 'top' )
Gaffer.Metadata.registerValue( __children["referenceBalls"]["BoxOut"]["__out"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["referenceBalls"]["BoxOut"]["__out"], 'description', 'The processed output scene.' )
Gaffer.Metadata.registerValue( __children["referenceBalls"]["BoxOut"]["passThrough"], 'noduleLayout:section', 'top' )
__children["referenceBalls"]["BoxOut"]["__uiPosition"].setValue( imath.V2f( 42.7636261, -64.441803 ) )
__children["referenceBalls"]["out"].setInput( __children["referenceBalls"]["BoxOut"]["__out"] )
Gaffer.Metadata.registerValue( __children["referenceBalls"]["out"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["referenceBalls"]["out"], 'description', 'The processed output scene.' )
Gaffer.Metadata.registerValue( __children["referenceBalls"]["out"], 'noduleLayout:section', 'bottom' )
__children["referenceBalls"]["Group"]["in"][1].setInput( __children["referenceBalls"]["greyBall"]["out"] )
__children["referenceBalls"]["Group"]["in"][2].setInput( __children["referenceBalls"]["chromeBall"]["out"] )
__children["referenceBalls"]["Group"]["name"].setValue( 'refSpheres' )
__children["referenceBalls"]["Group"]["__uiPosition"].setValue( imath.V2f( 25.6000042, -23.863678 ) )
__children["referenceBalls"]["chromeBall"]["Sphere3"]["name"].setValue( 'chrome' )
__children["referenceBalls"]["chromeBall"]["Sphere3"]["sets"].setValue( 'refSpheres' )
__children["referenceBalls"]["chromeBall"]["Sphere3"]["transform"]["translate"].setValue( imath.V3f( 1, 0, 0 ) )
__children["referenceBalls"]["chromeBall"]["Sphere3"]["__uiPosition"].setValue( imath.V2f( 104.389145, -1.19906902 ) )
__children["referenceBalls"]["chromeBall"]["ShaderAssignment6"]["in"].setInput( __children["referenceBalls"]["chromeBall"]["Sphere3"]["out"] )
__children["referenceBalls"]["chromeBall"]["ShaderAssignment6"]["shader"].setInput( __children["referenceBalls"]["chromeBall"]["RaySwitchShader1"]["out"] )
__children["referenceBalls"]["chromeBall"]["ShaderAssignment6"]["__uiPosition"].setValue( imath.V2f( 104.389145, -9.36313438 ) )
__children["referenceBalls"]["chromeBall"]["out"].setInput( __children["referenceBalls"]["chromeBall"]["BoxOut"]["__out"] )
Gaffer.Metadata.registerValue( __children["referenceBalls"]["chromeBall"]["out"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["referenceBalls"]["chromeBall"]["out"], 'description', 'The processed output scene.' )
__children["referenceBalls"]["chromeBall"]["StandardSurface2"]["parameters"]["base_color"].setValue( imath.Color3f( 1, 1, 1 ) )
__children["referenceBalls"]["chromeBall"]["StandardSurface2"]["parameters"]["specular_roughness"].setValue( 0.009999999776482582 )
__children["referenceBalls"]["chromeBall"]["StandardSurface2"]["parameters"]["metalness"].setValue( 1.0 )
__children["referenceBalls"]["chromeBall"]["StandardSurface2"]["__uiPosition"].setValue( imath.V2f( 67.3895416, 31.3777122 ) )
__children["referenceBalls"]["chromeBall"]["RaySwitchShader1"]["parameters"]["camera"].setInput( __children["referenceBalls"]["chromeBall"]["StandardSurface2"]["out"] )
__children["referenceBalls"]["chromeBall"]["RaySwitchShader1"]["parameters"]["shadow"].setInput( __children["referenceBalls"]["chromeBall"]["StandardSurface6"]["out"] )
__children["referenceBalls"]["chromeBall"]["RaySwitchShader1"]["parameters"]["diffuse_reflection"].setInput( __children["referenceBalls"]["chromeBall"]["StandardSurface6"]["out"] )
__children["referenceBalls"]["chromeBall"]["RaySwitchShader1"]["parameters"]["diffuse_transmission"].setInput( __children["referenceBalls"]["chromeBall"]["StandardSurface6"]["out"] )
__children["referenceBalls"]["chromeBall"]["RaySwitchShader1"]["parameters"]["specular_reflection"].setInput( __children["referenceBalls"]["chromeBall"]["StandardSurface6"]["out"] )
__children["referenceBalls"]["chromeBall"]["RaySwitchShader1"]["parameters"]["specular_transmission"].setInput( __children["referenceBalls"]["chromeBall"]["StandardSurface6"]["out"] )
__children["referenceBalls"]["chromeBall"]["RaySwitchShader1"]["parameters"]["volume"].setInput( __children["referenceBalls"]["chromeBall"]["StandardSurface6"]["out"] )
__children["referenceBalls"]["chromeBall"]["RaySwitchShader1"]["__uiPosition"].setValue( imath.V2f( 84.5858307, 13.667511 ) )
__children["referenceBalls"]["chromeBall"]["StandardSurface6"]["parameters"]["base"].setValue( 0.0 )
__children["referenceBalls"]["chromeBall"]["StandardSurface6"]["parameters"]["specular"].setValue( 0.0 )
__children["referenceBalls"]["chromeBall"]["StandardSurface6"]["parameters"]["opacity"].setValue( imath.Color3f( 0, 0, 0 ) )
__children["referenceBalls"]["chromeBall"]["StandardSurface6"]["__uiPosition"].setValue( imath.V2f( 60.7400208, 14.8675117 ) )
__children["referenceBalls"]["chromeBall"]["BoxOut"]["in"].setInput( __children["referenceBalls"]["chromeBall"]["ShaderAssignment6"]["out"] )
Gaffer.Metadata.registerValue( __children["referenceBalls"]["chromeBall"]["BoxOut"]["__out"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["referenceBalls"]["chromeBall"]["BoxOut"]["__out"], 'description', 'The processed output scene.' )
__children["referenceBalls"]["chromeBall"]["BoxOut"]["__uiPosition"].setValue( imath.V2f( 105.88842, -17.6951656 ) )
__children["referenceBalls"]["chromeBall"]["__uiPosition"].setValue( imath.V2f( 42.8950081, -15.5316467 ) )
__children["referenceBalls"]["greyBall"]["Sphere2"]["name"].setValue( 'grey' )
__children["referenceBalls"]["greyBall"]["Sphere2"]["sets"].setValue( 'refSpheres' )
__children["referenceBalls"]["greyBall"]["Sphere2"]["transform"]["translate"].setValue( imath.V3f( -1.20000005, 0, 0 ) )
__children["referenceBalls"]["greyBall"]["Sphere2"]["__uiPosition"].setValue( imath.V2f( 41.6798744, 15.6514502 ) )
__children["referenceBalls"]["greyBall"]["ShaderAssignment5"]["in"].setInput( __children["referenceBalls"]["greyBall"]["Sphere2"]["out"] )
__children["referenceBalls"]["greyBall"]["ShaderAssignment5"]["shader"].setInput( __children["referenceBalls"]["greyBall"]["RaySwitchShader2"]["out"] )
__children["referenceBalls"]["greyBall"]["ShaderAssignment5"]["__uiPosition"].setValue( imath.V2f( 41.6798744, 7.48738956 ) )
__children["referenceBalls"]["greyBall"]["out"].setInput( __children["referenceBalls"]["greyBall"]["BoxOut"]["__out"] )
Gaffer.Metadata.registerValue( __children["referenceBalls"]["greyBall"]["out"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["referenceBalls"]["greyBall"]["out"], 'description', 'The processed output scene.' )
__children["referenceBalls"]["greyBall"]["StandardSurface1"]["parameters"]["base_color"].setValue( imath.Color3f( 0.180000007, 0.180000007, 0.180000007 ) )
__children["referenceBalls"]["greyBall"]["StandardSurface1"]["parameters"]["specular_roughness"].setValue( 0.699999988079071 )
__children["referenceBalls"]["greyBall"]["StandardSurface1"]["__uiPosition"].setValue( imath.V2f( -7.27559662, 47.0265465 ) )
__children["referenceBalls"]["greyBall"]["RaySwitchShader2"]["parameters"]["camera"].setInput( __children["referenceBalls"]["greyBall"]["StandardSurface1"]["out"] )
__children["referenceBalls"]["greyBall"]["RaySwitchShader2"]["parameters"]["shadow"].setInput( __children["referenceBalls"]["greyBall"]["StandardSurface7"]["out"] )
__children["referenceBalls"]["greyBall"]["RaySwitchShader2"]["parameters"]["diffuse_reflection"].setInput( __children["referenceBalls"]["greyBall"]["StandardSurface7"]["out"] )
__children["referenceBalls"]["greyBall"]["RaySwitchShader2"]["parameters"]["diffuse_transmission"].setInput( __children["referenceBalls"]["greyBall"]["StandardSurface7"]["out"] )
__children["referenceBalls"]["greyBall"]["RaySwitchShader2"]["parameters"]["specular_reflection"].setInput( __children["referenceBalls"]["greyBall"]["StandardSurface7"]["out"] )
__children["referenceBalls"]["greyBall"]["RaySwitchShader2"]["parameters"]["specular_transmission"].setInput( __children["referenceBalls"]["greyBall"]["StandardSurface7"]["out"] )
__children["referenceBalls"]["greyBall"]["RaySwitchShader2"]["parameters"]["volume"].setInput( __children["referenceBalls"]["greyBall"]["StandardSurface7"]["out"] )
__children["referenceBalls"]["greyBall"]["RaySwitchShader2"]["__uiPosition"].setValue( imath.V2f( 16.0111122, 28.0638046 ) )
__children["referenceBalls"]["greyBall"]["StandardSurface7"]["parameters"]["base"].setValue( 0.0 )
__children["referenceBalls"]["greyBall"]["StandardSurface7"]["parameters"]["specular"].setValue( 0.0 )
__children["referenceBalls"]["greyBall"]["StandardSurface7"]["parameters"]["opacity"].setValue( imath.Color3f( 0, 0, 0 ) )
__children["referenceBalls"]["greyBall"]["StandardSurface7"]["__uiPosition"].setValue( imath.V2f( -7.83471298, 29.2638054 ) )
__children["referenceBalls"]["greyBall"]["BoxOut"]["in"].setInput( __children["referenceBalls"]["greyBall"]["ShaderAssignment5"]["out"] )
Gaffer.Metadata.registerValue( __children["referenceBalls"]["greyBall"]["BoxOut"]["__out"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["referenceBalls"]["greyBall"]["BoxOut"]["__out"], 'description', 'The processed output scene.' )
__children["referenceBalls"]["greyBall"]["BoxOut"]["__uiPosition"].setValue( imath.V2f( 43.1791878, -0.844641984 ) )
__children["referenceBalls"]["greyBall"]["__uiPosition"].setValue( imath.V2f( 25.6003838, -15.5308104 ) )
__children["referenceBalls"]["whiteBall"]["Sphere1"]["name"].setValue( 'white' )
__children["referenceBalls"]["whiteBall"]["Sphere1"]["sets"].setValue( 'refSpheres' )
__children["referenceBalls"]["whiteBall"]["Sphere1"]["transform"]["translate"].setValue( imath.V3f( -3.4000001, 0, 0 ) )
__children["referenceBalls"]["whiteBall"]["Sphere1"]["__uiPosition"].setValue( imath.V2f( -11.5656691, 0.733236551 ) )
__children["referenceBalls"]["whiteBall"]["ShaderAssignment4"]["in"].setInput( __children["referenceBalls"]["whiteBall"]["Sphere1"]["out"] )
__children["referenceBalls"]["whiteBall"]["ShaderAssignment4"]["shader"].setInput( __children["referenceBalls"]["whiteBall"]["RaySwitchShader3"]["out"] )
__children["referenceBalls"]["whiteBall"]["ShaderAssignment4"]["__uiPosition"].setValue( imath.V2f( -11.5656691, -7.43082619 ) )
__children["referenceBalls"]["whiteBall"]["out"].setInput( __children["referenceBalls"]["whiteBall"]["BoxOut"]["__out"] )
Gaffer.Metadata.registerValue( __children["referenceBalls"]["whiteBall"]["out"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["referenceBalls"]["whiteBall"]["out"], 'description', 'The processed output scene.' )
__children["referenceBalls"]["whiteBall"]["StandardSurface"]["parameters"]["specular_roughness"].setValue( 0.699999988079071 )
__children["referenceBalls"]["whiteBall"]["StandardSurface"]["__uiPosition"].setValue( imath.V2f( -65.2807541, 15.2536688 ) )
__children["referenceBalls"]["whiteBall"]["RaySwitchShader3"]["parameters"]["camera"].setInput( __children["referenceBalls"]["whiteBall"]["StandardSurface"]["out"] )
__children["referenceBalls"]["whiteBall"]["RaySwitchShader3"]["parameters"]["shadow"].setInput( __children["referenceBalls"]["whiteBall"]["StandardSurface8"]["out"] )
__children["referenceBalls"]["whiteBall"]["RaySwitchShader3"]["parameters"]["diffuse_reflection"].setInput( __children["referenceBalls"]["whiteBall"]["StandardSurface8"]["out"] )
__children["referenceBalls"]["whiteBall"]["RaySwitchShader3"]["parameters"]["diffuse_transmission"].setInput( __children["referenceBalls"]["whiteBall"]["StandardSurface8"]["out"] )
__children["referenceBalls"]["whiteBall"]["RaySwitchShader3"]["parameters"]["specular_reflection"].setInput( __children["referenceBalls"]["whiteBall"]["StandardSurface8"]["out"] )
__children["referenceBalls"]["whiteBall"]["RaySwitchShader3"]["parameters"]["specular_transmission"].setInput( __children["referenceBalls"]["whiteBall"]["StandardSurface8"]["out"] )
__children["referenceBalls"]["whiteBall"]["RaySwitchShader3"]["parameters"]["volume"].setInput( __children["referenceBalls"]["whiteBall"]["StandardSurface8"]["out"] )
__children["referenceBalls"]["whiteBall"]["RaySwitchShader3"]["__uiPosition"].setValue( imath.V2f( -43.0978317, -7.43082619 ) )
__children["referenceBalls"]["whiteBall"]["StandardSurface8"]["parameters"]["base"].setValue( 0.0 )
__children["referenceBalls"]["whiteBall"]["StandardSurface8"]["parameters"]["specular"].setValue( 0.0 )
__children["referenceBalls"]["whiteBall"]["StandardSurface8"]["parameters"]["opacity"].setValue( imath.Color3f( 0, 0, 0 ) )
__children["referenceBalls"]["whiteBall"]["StandardSurface8"]["__uiPosition"].setValue( imath.V2f( -67.9636459, -11.0308275 ) )
__children["referenceBalls"]["whiteBall"]["BoxOut"]["in"].setInput( __children["referenceBalls"]["whiteBall"]["ShaderAssignment4"]["out"] )
Gaffer.Metadata.registerValue( __children["referenceBalls"]["whiteBall"]["BoxOut"]["__out"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["referenceBalls"]["whiteBall"]["BoxOut"]["__out"], 'description', 'The processed output scene.' )
__children["referenceBalls"]["whiteBall"]["BoxOut"]["__uiPosition"].setValue( imath.V2f( -10.0663443, -15.7628574 ) )
__children["referenceBalls"]["whiteBall"]["__uiPosition"].setValue( imath.V2f( 7.47129059, -15.5316467 ) )
__children["referenceBalls"]["SetFilter"]["setExpression"].setValue( 'refSpheres' )
__children["referenceBalls"]["SetFilter"]["__uiPosition"].setValue( imath.V2f( -20.4759922, -33.6169472 ) )
__children["referenceBalls"]["attributes_visibility_enabled"].setValue( True )
Gaffer.Metadata.registerValue( __children["referenceBalls"]["attributes_visibility_enabled"], 'spreadsheet:columnName', 'visibilityEnabled' )
__children["referenceBalls"]["Prune"]["in"].setInput( __children["referenceBalls"]["Set"]["out"] )
__children["referenceBalls"]["Prune"]["filter"].setInput( __children["referenceBalls"]["SetFilter"]["out"] )
__children["referenceBalls"]["Prune"]["__uiPosition"].setValue( imath.V2f( -4.69851303, -37.5317345 ) )
__children["referenceBalls"]["Switch"]["index"].setInput( __children["Expr_refSpheres_and_cam"]["__out"]["p1"] )
Gaffer.Metadata.registerValue( __children["referenceBalls"]["Switch"]["in"], 'noduleLayout:section', 'top' )
__children["referenceBalls"]["Switch"]["in"][0].setInput( __children["referenceBalls"]["Prune"]["out"] )
__children["referenceBalls"]["Switch"]["in"][1].setInput( __children["referenceBalls"]["Group"]["out"] )
Gaffer.Metadata.registerValue( __children["referenceBalls"]["Switch"]["out"], 'noduleLayout:section', 'bottom' )
__children["referenceBalls"]["Switch"]["__uiPosition"].setValue( imath.V2f( 25.6000042, -57.0739136 ) )
__children["referenceBalls"]["Set"]["in"].setInput( __children["referenceBalls"]["Group"]["out"] )
__children["referenceBalls"]["Set"]["filter"].setInput( __children["referenceBalls"]["PathFilter"]["out"] )
__children["referenceBalls"]["Set"]["mode"].setValue( 1 )
__children["referenceBalls"]["Set"]["name"].setValue( 'refSpheres' )
__children["referenceBalls"]["Set"]["__uiPosition"].setValue( imath.V2f( 25.6000042, -29.367672 ) )
__children["referenceBalls"]["PathFilter"]["__uiPosition"].setValue( imath.V2f( 39.6000061, -23.2856407 ) )
__children["Parent3"]["in"].setInput( __children["CAM_group"]["out"] )
__children["Parent3"]["parent"].setValue( '/CAM/farCam' )
__children["Parent3"]["children"][0].setInput( __children["referenceBalls"]["out"] )
__children["Parent3"]["__uiPosition"].setValue( imath.V2f( 102.891113, 114.486244 ) )
__children["referenceTransform"]["in"].setInput( __children["Parent3"]["out"] )
__children["referenceTransform"]["filter"].setInput( __children["PathFilter4"]["out"] )
__children["referenceTransform"]["space"].setValue( 1 )
__children["referenceTransform"]["transform"]["translate"].setValue( imath.V3f( 4.29099846, 1.92793453, -20 ) )
__children["referenceTransform"]["transform"]["rotate"].setValue( imath.V3f( 0, 0, 90 ) )
__children["referenceTransform"]["transform"]["scale"]["x"].setValue( 0.33000001311302185 )
__children["referenceTransform"]["transform"]["scale"]["y"].setInput( __children["referenceTransform"]["transform"]["scale"]["x"] )
__children["referenceTransform"]["transform"]["scale"]["z"].setInput( __children["referenceTransform"]["transform"]["scale"]["x"] )
__children["referenceTransform"]["__uiPosition"].setValue( imath.V2f( 102.891113, 106.322182 ) )
__children["PathFilter4"]["paths"].setValue( IECore.StringVectorData( [ '/CAM/farCam/refSpheres' ] ) )
__children["PathFilter4"]["__uiPosition"].setValue( imath.V2f( 118.359161, 110.457726 ) )
__children["Cyclo"]["cyclo"]["fileName"].setValue( '${library:resources}/assets/cyclo/cyclo.abc' )
__children["Cyclo"]["cyclo"]["refreshCount"].setValue( 2 )
__children["Cyclo"]["cyclo"]["transform"]["scale"]["x"].setInput( __children["Cyclo"]["transform_scale_x"] )
__children["Cyclo"]["cyclo"]["transform"]["scale"]["y"].setInput( __children["Cyclo"]["cyclo"]["transform"]["scale"]["x"] )
__children["Cyclo"]["cyclo"]["transform"]["scale"]["z"].setInput( __children["Cyclo"]["cyclo"]["transform"]["scale"]["x"] )
__children["Cyclo"]["cyclo"]["__uiPosition"].setValue( imath.V2f( 63.9142799, 121.324547 ) )
__children["Cyclo"]["transform_scale_x"].setInput( __children["Expr_Cyclo"]["__out"]["p1"] )
__children["Cyclo"]["Set"]["in"].setInput( __children["Cyclo"]["cyclo"]["out"] )
__children["Cyclo"]["Set"]["filter"].setInput( __children["Cyclo"]["PathFilter"]["out"] )
__children["Cyclo"]["Set"]["name"].setValue( 'Cyclo' )
__children["Cyclo"]["Set"]["__uiPosition"].setValue( imath.V2f( 63.9142799, 114.486244 ) )
__children["Cyclo"]["out"].setInput( __children["Cyclo"]["BoxOut"]["__out"] )
Gaffer.Metadata.registerValue( __children["Cyclo"]["out"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["Cyclo"]["out"], 'description', 'The processed output scene.' )
__children["Cyclo"]["PathFilter"]["paths"].setValue( IECore.StringVectorData( [ '/*' ] ) )
__children["Cyclo"]["PathFilter"]["__uiPosition"].setValue( imath.V2f( 78.1785431, 121.291664 ) )
__children["Cyclo"]["BoxOut"]["in"].setInput( __children["Cyclo"]["CycloArnoldAttributes"]["out"] )
Gaffer.Metadata.registerValue( __children["Cyclo"]["BoxOut"]["__out"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["Cyclo"]["BoxOut"]["__out"], 'description', 'The processed output scene.' )
__children["Cyclo"]["BoxOut"]["__uiPosition"].setValue( imath.V2f( 65.4142838, 64.056015 ) )
__children["Cyclo"]["__uiPosition"].setValue( imath.V2f( 52.5096245, 119.830597 ) )
__children["Cyclo"]["CycloShaderAssign"]["in"].setInput( __children["Cyclo"]["CycloSubdiv"]["out"] )
__children["Cyclo"]["CycloShaderAssign"]["filter"].setInput( __children["Cyclo"]["PathFilter"]["out"] )
__children["Cyclo"]["CycloShaderAssign"]["shader"].setInput( __children["Cyclo"]["CycloRaySwitchShader"]["out"] )
__children["Cyclo"]["CycloShaderAssign"]["__uiPosition"].setValue( imath.V2f( 63.9142838, 97.4940643 ) )
__children["Cyclo"]["CycloSubdiv"]["in"].setInput( __children["Cyclo"]["AttrSides"]["out"] )
__children["Cyclo"]["CycloSubdiv"]["filter"].setInput( __children["Cyclo"]["PathFilter"]["out"] )
__children["Cyclo"]["CycloSubdiv"]["meshType"].setValue( 'catmullClark' )
__children["Cyclo"]["CycloSubdiv"]["__uiPosition"].setValue( imath.V2f( 63.9142838, 103.158127 ) )
__children["Cyclo"]["AttrSides"]["in"].setInput( __children["Cyclo"]["Set"]["out"] )
__children["Cyclo"]["AttrSides"]["filter"].setInput( __children["Cyclo"]["PathFilter"]["out"] )
__children["Cyclo"]["AttrSides"]["attributes"]["doubleSided"]["value"].setValue( False )
__children["Cyclo"]["AttrSides"]["attributes"]["doubleSided"]["enabled"].setValue( True )
__children["Cyclo"]["AttrSides"]["__uiPosition"].setValue( imath.V2f( 63.9142838, 108.822182 ) )
__children["Cyclo"]["CycloDarkGreyCamera"]["parameters"]["base_color"].setValue( imath.Color3f( 0.0799999982, 0.0799999982, 0.0799999982 ) )
__children["Cyclo"]["CycloDarkGreyCamera"]["parameters"]["specular"].setValue( 0.0 )
__children["Cyclo"]["CycloDarkGreyCamera"]["__uiPosition"].setValue( imath.V2f( 12.9866447, 113.694069 ) )
__children["Cyclo"]["CycloRaySwitchShader"]["parameters"]["camera"].setInput( __children["Cyclo"]["CycloDarkGreyCamera"]["out"] )
__children["Cyclo"]["CycloRaySwitchShader"]["parameters"]["shadow"].setInput( __children["Cyclo"]["CycloDarkGreyCamera"]["out"] )
__children["Cyclo"]["CycloRaySwitchShader"]["parameters"]["diffuse_reflection"].setInput( __children["Cyclo"]["CycloGreyBounces"]["out"] )
__children["Cyclo"]["CycloRaySwitchShader"]["parameters"]["diffuse_transmission"].setInput( __children["Cyclo"]["CycloDarkGreyCamera"]["out"] )
__children["Cyclo"]["CycloRaySwitchShader"]["parameters"]["specular_reflection"].setInput( __children["Cyclo"]["CycloDarkGreyCamera"]["out"] )
__children["Cyclo"]["CycloRaySwitchShader"]["parameters"]["specular_transmission"].setInput( __children["Cyclo"]["CycloDarkGreyCamera"]["out"] )
__children["Cyclo"]["CycloRaySwitchShader"]["parameters"]["volume"].setInput( __children["Cyclo"]["CycloDarkGreyCamera"]["out"] )
__children["Cyclo"]["CycloRaySwitchShader"]["__uiPosition"].setValue( imath.V2f( 32.6211662, 97.4940643 ) )
__children["Cyclo"]["CycloGreyBounces"]["parameters"]["base"].setValue( 0.20000000298023224 )
__children["Cyclo"]["CycloGreyBounces"]["parameters"]["specular"].setValue( 0.0 )
__children["Cyclo"]["CycloGreyBounces"]["parameters"]["emission_color"].setValue( imath.Color3f( 1, 0, 0 ) )
__children["Cyclo"]["CycloGreyBounces"]["__uiPosition"].setValue( imath.V2f( -0.467792511, 98.6940689 ) )
__children["Cyclo"]["CycloArnoldAttributes"]["in"].setInput( __children["Cyclo"]["CycloShaderAssign"]["out"] )
__children["Cyclo"]["CycloArnoldAttributes"]["filter"].setInput( __children["Cyclo"]["PathFilter"]["out"] )
__children["Cyclo"]["CycloArnoldAttributes"]["attributes"]["cameraVisibility"]["enabled"].setValue( True )
__children["Cyclo"]["CycloArnoldAttributes"]["attributes"]["shadowVisibility"]["value"].setValue( False )
__children["Cyclo"]["CycloArnoldAttributes"]["attributes"]["shadowVisibility"]["enabled"].setValue( True )
__children["Cyclo"]["CycloArnoldAttributes"]["attributes"]["cameraVisibility"]["value"].setInput( __children["Expr_Cyclo"]["__out"]["p0"] )
__children["Cyclo"]["CycloArnoldAttributes"]["__uiPosition"].setValue( imath.V2f( 63.9142838, 89.3300018 ) )
Gaffer.Metadata.registerValue( __children["enableCycloCameraRays"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["enableCycloCameraRays"], 'layout:section', 'Turntable.Visibility' )
Gaffer.Metadata.registerValue( __children["enableCycloCameraRays"], 'layout:index', 10 )
Gaffer.Metadata.registerValue( __children["enableRefSpheres"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["enableRefSpheres"], 'layout:section', 'Turntable.Visibility' )
Gaffer.Metadata.registerValue( __children["enableRefSpheres"], 'layout:index', 12 )
Gaffer.Metadata.registerValue( __children["Expr_refSpheres_and_cam"], 'nodeGadget:type', 'GafferUI::StandardNodeGadget' )
__children["Expr_refSpheres_and_cam"]["__in"]["p0"].setInput( __children["cameraPadding"] )
__children["Expr_refSpheres_and_cam"]["__in"]["p1"].setInput( __children["enableRefSpheres"] )
__children["Expr_refSpheres_and_cam"]["__uiPosition"].setValue( imath.V2f( 103.61071, 132.625565 ) )
Gaffer.Metadata.registerValue( __children["cameraPadding"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["cameraPadding"], 'layout:section', 'Turntable.Camera' )
Gaffer.Metadata.registerValue( __children["cameraPadding"], 'layout:index', 13 )
__children["PathFilter"]["paths"].setValue( IECore.StringVectorData( [ '/*' ] ) )
__children["PathFilter"]["__uiPosition"].setValue( imath.V2f( 19.0488071, 116.22213 ) )
__children["OpenGLAttributes"]["in"].setInput( __children["Cyclo"]["out"] )
__children["OpenGLAttributes"]["filter"].setInput( __children["PathFilter5"]["out"] )
__children["OpenGLAttributes"]["attributes"]["primitiveSolid"]["enabled"].setValue( True )
__children["OpenGLAttributes"]["attributes"]["primitiveSolid"]["value"].setInput( __children["Expr_Cyclo"]["__out"]["p3"] )
__children["OpenGLAttributes"]["__uiPosition"].setValue( imath.V2f( 51.0096245, 113.998566 ) )
__children["PathFilter5"]["paths"].setValue( IECore.StringVectorData( [ '/cyclo' ] ) )
__children["PathFilter5"]["__uiPosition"].setValue( imath.V2f( 65.5096283, 120.081245 ) )
Gaffer.Metadata.registerValue( __children["hdriRepo"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["hdriRepo"], 'layout:section', 'HDRIs' )
Gaffer.Metadata.registerValue( __children["hdriRepo"], 'layout:index', 15 )
Gaffer.Metadata.registerValue( __children["hdriRepo"], 'label', 'HDRIs Repository' )
Gaffer.Metadata.registerValue( __children["hdriRepo"], 'description', 'string plug for location of the HDRIs' )
Gaffer.Metadata.registerValue( __children["hdriRepo"], 'plugValueWidget:type', 'GafferUI.FileSystemPathPlugValueWidget' )
Gaffer.Metadata.registerValue( __children["hdriChooser"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["hdriChooser"], 'layout:section', 'HDRIs' )
Gaffer.Metadata.registerValue( __children["hdriChooser"], 'plugValueWidget:type', 'GafferUI.PresetsPlugValueWidget' )
Gaffer.Metadata.registerValue( __children["hdriChooser"], 'description', 'String plug to list all HDRIs in directory' )
Gaffer.Metadata.registerValue( __children["hdriChooser"], 'label', 'Select HDRI' )
Gaffer.Metadata.registerValue( __children["hdriChooser"], 'layout:index', 17 )
Gaffer.Metadata.registerValue( __children["hdriChooser"], 'presetNames', IECore.StringVectorData( [ 'christmas_photo_studio_06_4k', 'kloppenheim_02_4k', 'rosendal_mountain_midmorning_4k', 'scythian_tombs_2_4k', 'studio_small_08_4k' ] ) )
Gaffer.Metadata.registerValue( __children["hdriChooser"], 'presetValues', IECore.StringVectorData( [ 'E:/DL/HDRI/christmas_photo_studio_06_4k.exr', 'E:/DL/HDRI/kloppenheim_02_4k.exr', 'E:/DL/HDRI/rosendal_mountain_midmorning_4k.exr', 'E:/DL/HDRI/scythian_tombs_2_4k.exr', 'E:/DL/HDRI/studio_small_08_4k.exr' ] ) )
Gaffer.Metadata.registerValue( __children["hdriChooser"], 'presetsPlugValueWidget:allowCustom', True )
__children["selectedHDRI"].setInput( __children["hdriChooser"] )
Gaffer.Metadata.registerValue( __children["selectedHDRI"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["selectedHDRI"], 'layout:section', 'Debug' )
Gaffer.Metadata.registerValue( __children["selectedHDRI"], 'description', 'string plug to show the full path to selected HDRI' )
Gaffer.Metadata.registerValue( __children["selectedHDRI"], 'layout:index', 25 )
Gaffer.Metadata.registerValue( __children["hdrisFound"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["hdrisFound"], 'layout:section', 'Debug' )
Gaffer.Metadata.registerValue( __children["hdrisFound"], 'description', 'String Array plus that displays the full path to all detected HDRIs' )
Gaffer.Metadata.registerValue( __children["hdrisFound"], 'label', 'HDRIs found in dir' )
Gaffer.Metadata.registerValue( __children["hdrisFound"], 'layout:index', 26 )
Gaffer.Metadata.registerValue( __children["Exposure"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["Exposure"], 'layout:section', 'HDRIs' )
Gaffer.Metadata.registerValue( __children["Exposure"], 'layout:index', 18 )
Gaffer.Metadata.registerValue( __children["resolution"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["resolution"], 'layout:section', 'HDRIs' )
Gaffer.Metadata.registerValue( __children["resolution"], 'layout:index', 19 )
Gaffer.Metadata.registerValue( __children["samples"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["samples"], 'layout:section', 'HDRIs' )
Gaffer.Metadata.registerValue( __children["samples"], 'layout:index', 20 )
Gaffer.Metadata.registerValue( __children["button"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["button"], 'layout:section', 'HDRIs' )
Gaffer.Metadata.registerValue( __children["button"], 'description', 'string plug for refresh button' )
Gaffer.Metadata.registerValue( __children["button"], 'layout:index', 16 )
Gaffer.Metadata.registerValue( __children["button"], 'plugValueWidget:type', 'GafferUI.ButtonPlugValueWidget' )
Gaffer.Metadata.registerValue( __children["button"], 'label', 'Refresh' )
Gaffer.Metadata.registerValue( __children["button"], 'buttonPlugValueWidget:clicked', 'import pathlib\n\nnode = plug.node()\ndirectory = node["hdriRepo"].getValue()\nfile_format = ".exr"\nfiles = list( pathlib.Path( directory ).glob( \'*\' + file_format ) )\n\nfileNames = IECore.StringVectorData( [ f.stem for f in files ] )\nfilePaths = IECore.StringVectorData([directory + \'/\' + f + file_format for f in fileNames])\n\n\'\'\'\nold setup: \nfilePaths = IECore.StringVectorData( [ f.as_posix() for f in files ] )\n\'\'\'\n\n# clear any existing rows from the spreadsheet\n# row 0 is the default row so we leave that one\n# and only remove rows 1+\nspreadsheet = node["rows"]\nfor row in spreadsheet.children()[1:] :\n\tspreadsheet.removeRow( row )\n\nfor f in files :\n\trow = spreadsheet.addRow()\n\t# set the name of the row to the file name without extension\n\trow["name"].setValue( f.stem )\n\t# set the "hrdiFilePath" cell for this row to the full path to the HDRI\n\trow["cells"]["filename"]["value"].setValue( f.as_posix() )\n\n\nnode["hdrisFound"].setValue( filePaths )\nnode["HDRINames"].setValue( fileNames )\n\nGaffer.Metadata.registerValue( node["hdriChooser"], "presetNames", fileNames )\nGaffer.Metadata.registerValue( node["hdriChooser"], "presetValues", filePaths )\n' )
Gaffer.Metadata.registerValue( __children["toogleInvertAssetRotation"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["toogleInvertAssetRotation"], 'layout:section', 'Turntable.Asset' )
Gaffer.Metadata.registerValue( __children["toogleInvertAssetRotation"], 'layout:index', 6 )
Gaffer.Metadata.registerValue( __children["toogleInvertAssetRotation"], 'label', 'Invert Asset Rotation' )
Gaffer.Metadata.registerValue( __children["toogleInvertAssetRotation"], 'divider', False )
Gaffer.Metadata.registerValue( __children["toogleInvertSkydomeRotation"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["toogleInvertSkydomeRotation"], 'layout:section', 'Turntable.Skydome' )
Gaffer.Metadata.registerValue( __children["toogleInvertSkydomeRotation"], 'layout:index', 9 )
Gaffer.Metadata.registerValue( __children["toogleInvertSkydomeRotation"], 'label', 'Invert Skydome Rotation' )
Gaffer.Metadata.registerValue( __children["HDRINames"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["HDRINames"], 'layout:section', 'Debug' )
Gaffer.Metadata.registerValue( __children["HDRINames"], 'layout:index', 27 )
__children["enabledRowNames"].setInput( __children["HDRskydome"]["enabledRowNames"] )
Gaffer.Metadata.registerValue( __children["enabledRowNames"], 'description', 'An output plug containing the names of all currently enabled rows.' )
Gaffer.Metadata.registerValue( __children["enabledRowNames"], 'plugValueWidget:type', 'GafferUI.ConnectionPlugValueWidget' )
Gaffer.Metadata.registerValue( __children["enabledRowNames"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["enabledRowNames"], 'layout:section', 'Spreadsheet' )
Gaffer.Metadata.registerValue( __children["enabledRowNames"], 'layout:index', 22 )
Gaffer.Metadata.registerValue( __children["selector"], 'description', 'The value that the row names will be matched against.\nTypically this will refer to a Context Variable using\nthe `${variableName}` syntax.' )
Gaffer.Metadata.registerValue( __children["selector"], 'preset:Render Pass', '${renderPass}' )
Gaffer.Metadata.registerValue( __children["selector"], 'divider', True )
Gaffer.Metadata.registerValue( __children["selector"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["selector"], 'layout:section', 'Spreadsheet' )
Gaffer.Metadata.registerValue( __children["selector"], 'layout:index', 21 )
__children["activeRowIndex"].setInput( __children["HDRskydome"]["activeRowIndex"] )
Gaffer.Metadata.registerValue( __children["activeRowIndex"], 'description', "An output containing the index of the row that matches the selector\nin the current context.\n\n> Tip : The default row has index `0`, which converts to `False`\n> when used to drive a BoolPlug via a connection (all other values\n> convert to `True`). Therefore `Spreadsheet.activeRowIndex` can\n> be connected to a Node's `enabled` plug to disable the node when\n> no row is matched." )
Gaffer.Metadata.registerValue( __children["activeRowIndex"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["activeRowIndex"], 'layout:section', 'Spreadsheet' )
Gaffer.Metadata.registerValue( __children["activeRowIndex"], 'layout:index', 23 )
Gaffer.Metadata.registerValue( __children["rows"], 'description', 'Holds a child RowPlug for each row in the spreadsheet.' )
Gaffer.Metadata.registerValue( __children["rows"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["rows"], 'layout:section', 'Spreadsheet' )
Gaffer.Metadata.registerValue( __children["rows"], 'layout:index', 24 )
Gaffer.Metadata.registerValue( __children["rows"][0], 'description', 'The default row. This provides output values when no other\nrow matches the `selector`.' )
Gaffer.Metadata.registerValue( __children["rows"][0]["name"], 'description', "The name of the row. This is matched against the `selector`\nto determine which row is chosen to be passed to the output.\nMay contain multiple space separated names and any of Gaffer's\nstandard wildcards." )
Gaffer.Metadata.registerValue( __children["rows"][0]["enabled"], 'description', 'Enables or disables this row. Disabled rows are ignored.' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"], 'description', 'Contains a child CellPlug for each column in the spreadsheet.' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["filename"], 'spreadsheet:columnIndex', 0 )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["filename"], 'spreadsheet:columnWidth', 264 )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["filename"]["value"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["filename"]["value"], 'plugValueWidget:type', 'GafferUI.PathPlugValueWidget' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["filename"]["value"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["filename"]["value"], 'label', 'Filename' )
Gaffer.Metadata.registerValue( __children["rows"][0]["cells"]["filename"]["value"], 'noduleLayout:label', 'Filename' )
Gaffer.Metadata.registerValue( __children["index"], 'description', 'Allows to have the various HDRIs to be dispatched and rendered through a wedge node.\n\n### Prerequisite\nRequires a wedge node using the value set in the Selector plug of the Spreadsheet tab as Variable and the Index Variable plug set accordingly.\\\n\\\nMode set to String List.\n\n**The Strings plug requires the enabledRowNames of the Spreadsheet as input.**' )
Gaffer.Metadata.registerValue( __children["index"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["index"], 'label', 'Batch Render' )
Gaffer.Metadata.registerValue( __children["index"], 'plugValueWidget:type', 'GafferUI.BoolPlugValueWidget' )
Gaffer.Metadata.registerValue( __children["index"], 'layout:section', '' )
Gaffer.Metadata.registerValue( __children["index"], 'layout:index', 0 )
Gaffer.Metadata.registerValue( __children["index"], 'divider', False )
Gaffer.Metadata.registerValue( __children["target"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["target"], 'description', 'The scene location to which the cameras are pointed.' )
Gaffer.Metadata.registerValue( __children["target"], 'layout:section', 'Turntable.Asset' )
Gaffer.Metadata.registerValue( __children["target"], 'layout:index', 3 )
Gaffer.Metadata.registerValue( __children["target"], 'label', 'Asset Location' )
Gaffer.Metadata.registerValue( __children["target"], 'divider', True )
Gaffer.Metadata.registerValue( __children["targetFrame"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["targetFrame"], 'description', 'Frame at which the Bbox will be sampled at' )
Gaffer.Metadata.registerValue( __children["targetFrame"], 'layout:section', 'Turntable.Camera' )
Gaffer.Metadata.registerValue( __children["targetFrame"], 'layout:index', 14 )
__children["ContextVariables_LiveRendering"]["variables"]["member1"]["name"].setValue( 'hdri:value' )
__children["ContextVariables_LiveRendering"]["variables"]["member2"]["name"].setValue( 'hdri:index' )
__children["ContextVariables_LiveRendering"]["variables"]["member1"]["value"].setInput( __children["hdriChooser"] )
__children["ContextVariables_LiveRendering"]["in"].setInput( __children["FramingConstraint"]["out"] )
Gaffer.Metadata.registerValue( __children["ContextVariables_LiveRendering"]["in"], 'noduleLayout:section', 'top' )
Gaffer.Metadata.registerValue( __children["ContextVariables_LiveRendering"]["out"], 'noduleLayout:section', 'bottom' )
__children["ContextVariables_LiveRendering"]["__uiPosition"].setValue( imath.V2f( -4.07051659, 81.5092697 ) )
__children["Switch_Batch_02"]["index"].setInput( __children["index"] )
Gaffer.Metadata.registerValue( __children["Switch_Batch_02"]["in"], 'noduleLayout:section', 'top' )
__children["Switch_Batch_02"]["in"][0].setInput( __children["ContextVariables_LiveRendering"]["out"] )
__children["Switch_Batch_02"]["in"][1].setInput( __children["FramingConstraint"]["out"] )
Gaffer.Metadata.registerValue( __children["Switch_Batch_02"]["out"], 'noduleLayout:section', 'bottom' )
__children["Switch_Batch_02"]["__uiPosition"].setValue( imath.V2f( 9.88786888, 73.3452072 ) )
__children["Expr_Cyclo"]["__engine"].setValue( 'python' )
__children["Expr_Cyclo"]["__expression"].setValue( 'baseSkydomeScale = 100\n\nassetBoundScale = parent["__in"]["p0"]\n\nnormalizedSkydomeScale = int(assetBoundScale * baseSkydomeScale)*2\n\nparent["__out"]["p2"] = normalizedSkydomeScale\n\nparent["__out"]["p1"] = assetBoundScale *12.5\n\n\n#parent["Cyclo"]["CycloArnoldAttributes"]["attributes"]["cameraVisibility"] = 1\n\n\nif parent["__in"]["p1"] == True:\n\tparent["__out"]["p0"] = True\n\tparent["__out"]["p3"] = True\nelif parent["__in"]["p1"] == False:\n\tparent["__out"]["p0"] = False\n\tparent["__out"]["p3"] = False\n' )
__children["Expr_Rotation"]["__engine"].setValue( 'python' )
__children["Expr_Rotation"]["__expression"].setValue( 'import imath\n#parameter to affect\n\nparent["__out"]["p0"] = imath.V3f(0, 0, 0)\n\nparent["__out"]["p1"] = imath.V3f(0, 0, 0)\n\n#get current frame\ncurrentFrame = context.getFrame()\n\n#get start, end and mid frame\nstartFrame = context.get("frameRange:start")\nendFrame = context.get("frameRange:end")\n\nmidFrame = int((endFrame-startFrame)/2 + startFrame)\n\n#define rotation\nrotation = 0\n\n#define asset rotation offset\nasset_offsetRotationX = parent["__in"]["p0"]\nasset_offsetRotationY = parent["__in"]["p1"]\nasset_offsetRotationZ = parent["__in"]["p2"]\n\n#define skydome rotation offset\nskydome_offsetRotationX = parent["__in"]["p3"]\nskydome_offsetRotationY = parent["__in"]["p4"]\nskydome_offsetRotationZ = parent["__in"]["p5"]\n\n"""\nDefining the functions for the various scenarios possible\n\nrotation_start_to_mid = calculate_rotation_start_to_mid(startFrame, midFrame, currentFrame)\nrotation_mid_to_end = calculate_rotation_mid_to_end(midFrame, endFrame, currentFrame)\nrotation_start_to_end = calculate_rotation_start_to_end(startFrame, endFrame, currentFrame)\n\n"""\n# Rotation from startFrame to midFrame\n\ndef calculate_rotation_start_to_mid(startFrame, midFrame, currentFrame):\n    if startFrame <= currentFrame <= midFrame:\n        progress = (currentFrame - startFrame) / (midFrame - startFrame)\n        return progress * 360\n    else:\n        return 0\n\n\n# Rotation from midFrame to endFrame\n\ndef calculate_rotation_mid_to_end(midFrame, endFrame, currentFrame):\n    if midFrame <= currentFrame <= endFrame:\n        progress = (currentFrame - midFrame) / (endFrame - midFrame)\n        return progress * 360\n    else:\n        return 0\n\n\n# Rotation from startFrame to endFrame\n    \ndef calculate_rotation_start_to_end(startFrame, endFrame, currentFrame):\n    if startFrame <= currentFrame <= endFrame:\n        progress = (currentFrame - startFrame) / (endFrame - startFrame)\n        return progress * 360\n    else:\n        return 0\n\n\nif parent["__in"]["p6"] == 0 and parent["__in"]["p7"] == 0:\n    rotationAsset = 0\n    rotationHDRI = 0\n\nelif parent["__in"]["p6"] == 1 and parent["__in"]["p7"] == 1:\n    rotationAsset = calculate_rotation_start_to_mid(startFrame, midFrame, currentFrame)\n    rotationHDRI = calculate_rotation_mid_to_end(midFrame, endFrame, currentFrame)\n\nelif parent["__in"]["p6"] == 1 and parent["__in"]["p7"] == 0:\n    rotationAsset = calculate_rotation_start_to_end(startFrame, endFrame, currentFrame)\n    rotationHDRI = 0\n\nelif parent["__in"]["p6"] == 0 and parent["__in"]["p7"] == 1:\n    rotationAsset = 0\n    rotationHDRI = calculate_rotation_start_to_end(startFrame, endFrame, currentFrame)\n\n# Check if rotation inversion is required\nif parent["__in"]["p8"] == 1:\n    rotationAsset *= -1\nelif parent["__in"]["p9"] == 1:\n    rotationHDRI *= -1\n    \n\n#assign the new values\n\nparent["__out"]["p1"] = imath.V3f(skydome_offsetRotationX, rotationHDRI + skydome_offsetRotationY, skydome_offsetRotationZ)\n\nparent["__out"]["p0"] = imath.V3f(asset_offsetRotationX, rotationAsset + asset_offsetRotationY, asset_offsetRotationZ)\n' )
__children["Expr_skydome"]["__engine"].setValue( 'python' )
__children["Expr_skydome"]["__expression"].setValue( '\n\n\nparent["__out"]["p0"] = 1\n\nif parent["__in"]["p0"] == 1:\n\tparent["__out"]["p0"] = 1\nelif parent["__in"]["p0"] == 0:\n\tparent["__out"]["p0"] = 0' )
__children["Expr_refSpheres_and_cam"]["__engine"].setValue( 'python' )
__children["Expr_refSpheres_and_cam"]["__expression"].setValue( 'if parent["__in"]["p1"] == True:\n\tparent["__out"]["p1"] = 1\nelif parent["__in"]["p1"] == False:\n\tparent["__out"]["p1"] = 0\n\t\n\t\n\t\nbasePadding=-0.15\npaddingMultiplier = parent["__in"]["p0"]\nparent["__out"]["p0"] = basePadding * paddingMultiplier\n\n' )
Gaffer.Metadata.registerValue( parent, 'uiEditor:emptySections', IECore.StringVectorData( [  ] ) )
Gaffer.Metadata.registerValue( parent, 'uiEditor:emptySectionIndices', IECore.IntVectorData( [  ] ) )
Gaffer.Metadata.registerValue( parent, 'layout:section:HDRIs.Debug:summary', '' )
Gaffer.Metadata.registerValue( parent, 'layout:section:HDRIs:summary', '' )


del __children

