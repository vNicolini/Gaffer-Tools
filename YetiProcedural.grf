import Gaffer
import GafferScene
import IECore
import imath

Gaffer.Metadata.registerValue( parent, "serialiser:milestoneVersion", 1, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:majorVersion", 3, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:minorVersion", 9, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:patchVersion", 0, persistent=False )

__children = {}

__children["ExternalProcedural"] = GafferScene.ExternalProcedural( "ExternalProcedural" )
parent.addChild( __children["ExternalProcedural"] )
__children["ExternalProcedural"]["user"].addChild( Gaffer.FloatPlug( "shutter_start", defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ExternalProcedural"]["user"].addChild( Gaffer.FloatPlug( "shutter_end", defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ExternalProcedural"]["user"].addChild( Gaffer.IntPlug( "sample_count", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ExternalProcedural"]["parameters"].addChild( Gaffer.NameValuePlug( "", Gaffer.StringPlug( "value", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "member1", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["ExternalProcedural"]["parameters"].addChild( Gaffer.NameValuePlug( "", Gaffer.IntPlug( "value", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "member2", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["ExternalProcedural"]["parameters"].addChild( Gaffer.NameValuePlug( "", Gaffer.IntPlug( "value", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "member3", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["ExternalProcedural"]["parameters"].addChild( Gaffer.NameValuePlug( "", Gaffer.FloatPlug( "value", defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "member6", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["ExternalProcedural"]["parameters"].addChild( Gaffer.NameValuePlug( "", Gaffer.FloatPlug( "value", defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "member7", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["ExternalProcedural"]["parameters"].addChild( Gaffer.NameValuePlug( "", Gaffer.IntPlug( "value", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "member8", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["ExternalProcedural"]["parameters"].addChild( Gaffer.NameValuePlug( "", Gaffer.FloatVectorDataPlug( "value", defaultValue = IECore.FloatVectorData( [  ] ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "member10", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["ExternalProcedural"]["parameters"].addChild( Gaffer.NameValuePlug( "", Gaffer.FloatPlug( "value", defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "member11", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["ExternalProcedural"]["parameters"].addChild( Gaffer.NameValuePlug( "", Gaffer.FloatPlug( "value", defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "member12", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["ExternalProcedural"]["parameters"].addChild( Gaffer.NameValuePlug( "", Gaffer.FloatPlug( "value", defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "member13", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["ExternalProcedural"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Expression"] = Gaffer.Expression( "Expression" )
parent.addChild( __children["Expression"] )
__children["Expression"]["__in"].addChild( Gaffer.IntPlug( "p0", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Expression"]["__in"].addChild( Gaffer.FloatPlug( "p1", defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Expression"]["__in"].addChild( Gaffer.FloatPlug( "p2", defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Expression"]["__out"].addChild( Gaffer.FloatPlug( "p0", direction = Gaffer.Plug.Direction.Out, defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Expression"]["__out"].addChild( Gaffer.FloatPlug( "p1", direction = Gaffer.Plug.Direction.Out, defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Expression"]["__out"].addChild( Gaffer.IntPlug( "p2", direction = Gaffer.Plug.Direction.Out, defaultValue = 1, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Expression"]["__out"].addChild( Gaffer.FloatVectorDataPlug( "p3", direction = Gaffer.Plug.Direction.Out, defaultValue = IECore.FloatVectorData( [  ] ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Expression"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BoxOut"] = Gaffer.BoxOut( "BoxOut" )
parent.addChild( __children["BoxOut"] )
__children["BoxOut"].setup( GafferScene.ScenePlug( "in", ) )
__children["BoxOut"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["out"] = GafferScene.ScenePlug( "out", direction = Gaffer.Plug.Direction.Out, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["out"] )
__children["name"] = Gaffer.StringPlug( "name", defaultValue = 'procedural', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["name"] )
__children["filename"] = Gaffer.StringPlug( "filename", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["filename"] )
__children["Mode"] = Gaffer.IntPlug( "Mode", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["Mode"] )
__children["verbosity"] = Gaffer.IntPlug( "verbosity", defaultValue = 1, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["verbosity"] )
__children["frame"] = Gaffer.IntPlug( "frame", defaultValue = 1, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["frame"] )
__children["shutter_start"] = Gaffer.FloatPlug( "shutter_start", defaultValue = -0.25, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["shutter_start"] )
__children["shutter_end"] = Gaffer.FloatPlug( "shutter_end", defaultValue = 0.25, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["shutter_end"] )
__children["sample_count"] = Gaffer.IntPlug( "sample_count", defaultValue = 3, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["sample_count"] )
__children["lengthMult"] = Gaffer.FloatPlug( "lengthMult", defaultValue = 1.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["lengthMult"] )
__children["widthMult"] = Gaffer.FloatPlug( "widthMult", defaultValue = 1.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["widthMult"] )
__children["densityMult"] = Gaffer.FloatPlug( "densityMult", defaultValue = 1.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["densityMult"] )
__children["bound"] = Gaffer.Box3fPlug( "bound", defaultValue = imath.Box3f( imath.V3f( -0.5, -0.5, -0.5 ), imath.V3f( 0.5, 0.5, 0.5 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["bound"] )
__children["sets"] = Gaffer.StringPlug( "sets", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["sets"] )
__children["get_and_set_bbox"] = Gaffer.Expression( "get_and_set_bbox" )
parent.addChild( __children["get_and_set_bbox"] )
__children["get_and_set_bbox"]["__in"].addChild( Gaffer.StringPlug( "p0", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["get_and_set_bbox"]["__out"].addChild( Gaffer.Box3fPlug( "p0", direction = Gaffer.Plug.Direction.Out, defaultValue = imath.Box3f( imath.V3f( -0.5, -0.5, -0.5 ), imath.V3f( 0.5, 0.5, 0.5 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["get_and_set_bbox"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["motionSamples"] = Gaffer.FloatVectorDataPlug( "motionSamples", defaultValue = IECore.FloatVectorData( [  ] ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["motionSamples"] )
__children["ExternalProcedural"]["user"]["shutter_start"].setInput( __children["shutter_start"] )
Gaffer.Metadata.registerValue( __children["ExternalProcedural"]["user"]["shutter_start"], 'nodule:type', '' )
__children["ExternalProcedural"]["user"]["shutter_end"].setInput( __children["shutter_end"] )
Gaffer.Metadata.registerValue( __children["ExternalProcedural"]["user"]["shutter_end"], 'nodule:type', '' )
__children["ExternalProcedural"]["user"]["sample_count"].setInput( __children["sample_count"] )
Gaffer.Metadata.registerValue( __children["ExternalProcedural"]["user"]["sample_count"], 'nodule:type', '' )
__children["ExternalProcedural"]["name"].setInput( __children["name"] )
__children["ExternalProcedural"]["sets"].setInput( __children["sets"] )
__children["ExternalProcedural"]["fileName"].setValue( 'pgYetiArnold' )
__children["ExternalProcedural"]["bound"].setInput( __children["bound"] )
__children["ExternalProcedural"]["parameters"]["member1"]["name"].setValue( 'filename' )
__children["ExternalProcedural"]["parameters"]["member2"]["name"].setValue( 'frame' )
__children["ExternalProcedural"]["parameters"]["member3"]["name"].setValue( 'verbosity' )
__children["ExternalProcedural"]["parameters"]["member6"]["name"].setValue( 'motion_start' )
__children["ExternalProcedural"]["parameters"]["member7"]["name"].setValue( 'motion_end' )
__children["ExternalProcedural"]["parameters"]["member8"]["name"].setValue( 'mode' )
__children["ExternalProcedural"]["parameters"]["member10"]["name"].setValue( 'samples' )
__children["ExternalProcedural"]["parameters"]["member11"]["name"].setValue( 'length' )
__children["ExternalProcedural"]["parameters"]["member12"]["name"].setValue( 'width' )
__children["ExternalProcedural"]["parameters"]["member13"]["name"].setValue( 'density' )
__children["ExternalProcedural"]["parameters"]["member1"]["value"].setInput( __children["filename"] )
__children["ExternalProcedural"]["parameters"]["member2"]["value"].setInput( __children["frame"] )
__children["ExternalProcedural"]["parameters"]["member3"]["value"].setInput( __children["verbosity"] )
__children["ExternalProcedural"]["parameters"]["member6"]["value"].setInput( __children["Expression"]["__out"]["p0"] )
__children["ExternalProcedural"]["parameters"]["member7"]["value"].setInput( __children["Expression"]["__out"]["p1"] )
__children["ExternalProcedural"]["parameters"]["member8"]["value"].setInput( __children["Mode"] )
__children["ExternalProcedural"]["parameters"]["member10"]["value"].setInput( __children["motionSamples"] )
__children["ExternalProcedural"]["parameters"]["member11"]["value"].setInput( __children["lengthMult"] )
__children["ExternalProcedural"]["parameters"]["member12"]["value"].setInput( __children["widthMult"] )
__children["ExternalProcedural"]["parameters"]["member13"]["value"].setInput( __children["densityMult"] )
__children["ExternalProcedural"]["__uiPosition"].setValue( imath.V2f( -41.5807381, 16.4204521 ) )
Gaffer.Metadata.registerValue( __children["Expression"], 'nodeGadget:type', 'GafferUI::StandardNodeGadget' )
__children["Expression"]["__in"]["p0"].setInput( __children["ExternalProcedural"]["user"]["sample_count"] )
__children["Expression"]["__in"]["p1"].setInput( __children["ExternalProcedural"]["user"]["shutter_end"] )
__children["Expression"]["__in"]["p2"].setInput( __children["ExternalProcedural"]["user"]["shutter_start"] )
__children["Expression"]["__uiPosition"].setValue( imath.V2f( -52.9129524, 23.0582714 ) )
__children["BoxOut"]["in"].setInput( __children["ExternalProcedural"]["out"] )
Gaffer.Metadata.registerValue( __children["BoxOut"]["in"], 'noduleLayout:section', 'top' )
Gaffer.Metadata.registerValue( __children["BoxOut"]["__out"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["BoxOut"]["__out"], 'description', 'The output scene.' )
Gaffer.Metadata.registerValue( __children["BoxOut"]["passThrough"], 'noduleLayout:section', 'top' )
__children["BoxOut"]["__uiPosition"].setValue( imath.V2f( -41.5807381, 1.79495811 ) )
__children["out"].setInput( __children["BoxOut"]["__out"] )
Gaffer.Metadata.registerValue( __children["out"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["out"], 'description', 'The output scene.' )
Gaffer.Metadata.registerValue( __children["out"], 'noduleLayout:section', 'bottom' )
Gaffer.Metadata.registerValue( __children["out"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["out"], 'layout:index', 0 )
Gaffer.Metadata.registerValue( __children["name"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["name"], 'description', 'The name of the object in the output scene.' )
Gaffer.Metadata.registerValue( __children["name"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["name"], 'layout:index', 1 )
Gaffer.Metadata.registerValue( __children["filename"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["filename"], 'plugValueWidget:type', 'GafferUI.FileSystemPathPlugValueWidget' )
Gaffer.Metadata.registerValue( __children["filename"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["filename"], 'layout:index', 3 )
Gaffer.Metadata.registerValue( __children["Mode"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["Mode"], 'plugValueWidget:type', 'GafferUI.PresetsPlugValueWidget' )
Gaffer.Metadata.registerValue( __children["Mode"], 'preset:Ribbon', 0 )
Gaffer.Metadata.registerValue( __children["Mode"], 'preset:Tubes', 1 )
Gaffer.Metadata.registerValue( __children["Mode"], 'preset:Orientations (Arnold)', 2 )
Gaffer.Metadata.registerValue( __children["Mode"], 'description', 'Controls the curve style used for output fibrers.' )
Gaffer.Metadata.registerValue( __children["Mode"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["Mode"], 'layout:index', 4 )
Gaffer.Metadata.registerValue( __children["verbosity"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["verbosity"], 'layout:section', 'Debug' )
Gaffer.Metadata.registerValue( __children["verbosity"], 'layout:index', 12 )
Gaffer.Metadata.registerValue( __children["verbosity"], 'plugValueWidget:type', 'GafferUI.PresetsPlugValueWidget' )
Gaffer.Metadata.registerValue( __children["verbosity"], 'preset:None', 0 )
Gaffer.Metadata.registerValue( __children["verbosity"], 'preset:Some', 1 )
Gaffer.Metadata.registerValue( __children["verbosity"], 'preset:All', 2 )
__children["frame"].setInput( __children["Expression"]["__out"]["p2"] )
Gaffer.Metadata.registerValue( __children["frame"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["frame"], 'layout:section', 'Debug' )
Gaffer.Metadata.registerValue( __children["frame"], 'layout:index', 13 )
Gaffer.Metadata.registerValue( __children["shutter_start"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["shutter_start"], 'label', 'Shutter Start' )
Gaffer.Metadata.registerValue( __children["shutter_start"], 'layout:section', 'Settings.Motion Blur' )
Gaffer.Metadata.registerValue( __children["shutter_start"], 'layout:index', 9 )
Gaffer.Metadata.registerValue( __children["shutter_end"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["shutter_end"], 'label', 'Shutter End' )
Gaffer.Metadata.registerValue( __children["shutter_end"], 'layout:section', 'Settings.Motion Blur' )
Gaffer.Metadata.registerValue( __children["shutter_end"], 'layout:index', 10 )
Gaffer.Metadata.registerValue( __children["sample_count"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["sample_count"], 'description', '' )
Gaffer.Metadata.registerValue( __children["sample_count"], 'label', 'Sample Count' )
Gaffer.Metadata.registerValue( __children["sample_count"], 'layout:section', 'Settings.Motion Blur' )
Gaffer.Metadata.registerValue( __children["sample_count"], 'layout:index', 11 )
Gaffer.Metadata.registerValue( __children["lengthMult"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["lengthMult"], 'layout:section', 'Settings.Attributes' )
Gaffer.Metadata.registerValue( __children["lengthMult"], 'layout:index', 6 )
Gaffer.Metadata.registerValue( __children["widthMult"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["widthMult"], 'layout:section', 'Settings.Attributes' )
Gaffer.Metadata.registerValue( __children["widthMult"], 'layout:index', 7 )
Gaffer.Metadata.registerValue( __children["densityMult"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["densityMult"], 'layout:section', 'Settings.Attributes' )
Gaffer.Metadata.registerValue( __children["densityMult"], 'layout:index', 8 )
__children["bound"].setInput( __children["get_and_set_bbox"]["__out"]["p0"] )
Gaffer.Metadata.registerValue( __children["bound"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["bound"], 'description', 'The bounding box of the external procedural or archive.' )
Gaffer.Metadata.registerValue( __children["bound"], 'layout:section', 'Debug' )
Gaffer.Metadata.registerValue( __children["bound"], 'layout:index', 14 )
Gaffer.Metadata.registerValue( __children["sets"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["sets"], 'description', 'A list of sets to include the object in. The\nnames should be separated by spaces.' )
Gaffer.Metadata.registerValue( __children["sets"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["sets"], 'layout:index', 2 )
Gaffer.Metadata.registerValue( __children["get_and_set_bbox"], 'nodeGadget:type', 'GafferUI::StandardNodeGadget' )
__children["get_and_set_bbox"]["__in"]["p0"].setInput( __children["filename"] )
__children["get_and_set_bbox"]["__uiPosition"].setValue( imath.V2f( -56.5971832, 9.13575935 ) )
__children["motionSamples"].setInput( __children["Expression"]["__out"]["p3"] )
Gaffer.Metadata.registerValue( __children["motionSamples"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["motionSamples"], 'layout:section', 'Debug' )
Gaffer.Metadata.registerValue( __children["motionSamples"], 'layout:index', 15 )
__children["Expression"]["__engine"].setValue( 'python' )
__children["Expression"]["__expression"].setValue( 'import IECore\n\nshutter_start = parent["__in"]["p2"]\nshutter_end = parent["__in"]["p1"]\nsample_count = parent["__in"]["p0"]\n\nstart = round(context["frame"]) + shutter_start\nend = round(context["frame"]) + shutter_end\n\ncurrentFrame = round(context["frame"])\n\nparent["__out"]["p2"] = currentFrame\n\nparent["__out"]["p0"] = start\nparent["__out"]["p1"] = end\n\nif sample_count > 1:\n\tsteps = [float(i) / float(sample_count - 1) for i in range(sample_count)]\n\tsamples = [start + s * (end - start) for s in steps]\nelse:\n\tsamples = [round(context["frame"])]\n\nparent["__out"]["p3"] = IECore.FloatVectorData(samples)' )
__children["get_and_set_bbox"]["__engine"].setValue( 'python' )
__children["get_and_set_bbox"]["__expression"].setValue( 'import imath\nimport os\nimport subprocess\n\ndefaultBbox = imath.Box3f( imath.V3f( -0.5, -0.5, -0.5 ), imath.V3f( 0.5, 0.5, 0.5 ) )\n\nfurCache = parent["__in"]["p0"]\n\nif furCache == str(\'\'):\n\tparent["__out"]["p0"] = defaultBbox\nelse:\n\t    # Call subprocess to get the bounding box\n    command = f\'pgyeticacheinfo --fastBoundingBox --file {furCache}\'\n    result = subprocess.run(command, shell=True, stdout=subprocess.PIPE, text=True)\n\n    # Check if the command was successful and parse the V3f values\n    if result.returncode == 0:\n        bbox_str = result.stdout.strip().replace(\'(\', \'\').replace(\')\', \'\')\n        bbox_values = [float(val) for val in bbox_str.split()]\n        min_point = imath.V3f(bbox_values[0], bbox_values[1], bbox_values[2])\n        max_point = imath.V3f(bbox_values[3], bbox_values[4], bbox_values[5])\n        cacheBbox = imath.Box3f(min_point, max_point)\n        parent["__out"]["p0"] = cacheBbox\n    else:\n        # Handle the case where the subprocess command failed\n        print(f"Error running command: {command}")\n        parent["__out"]["p0"] = defaultBbox\n\t\n' )
Gaffer.Metadata.registerValue( parent, 'uiEditor:emptySections', IECore.StringVectorData( [  ] ) )
Gaffer.Metadata.registerValue( parent, 'uiEditor:emptySectionIndices', IECore.IntVectorData( [  ] ) )
Gaffer.Metadata.registerValue( parent, 'noduleLayout:customGadget:addButtonTop:visible', True )


del __children

